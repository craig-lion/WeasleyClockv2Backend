# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Location {
  id: Int!
  name: String!
  lnglat: String
  privacy: String!
  createdOn: DateTime!
  createdBy: User!
  currentUsers: User!
  favoritedBy: [User!]
  adventures: [Adventure!]
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type AdventureRequest {
  id: Int!
  createdBy: User!
  createdOn: DateTime!
  status: String!
  recipient: User!
  adventure: Adventure!
}

type FriendRequest {
  id: Int!
  createdBy: User!
  createdOn: DateTime!
  acceptedOn: DateTime!
  status: String!
  recipient: User!
}

type User {
  id: Int
  name: String!
  password: String!
  currentLocation: Location
  locations: [Location!]
  favoriteLocations: [Location!]
  createdLocations: [Location!]
  createdAdventures: [Adventure!]
  adventures: [AdventureRequest!]
  friends: FriendRequestData!
}

type Adventure {
  id: Int!
  name: String!
  time: DateTime!
  createdBy: User!
  createdOn: DateTime!
  message: String
  location: Location!
  requests: AdventureRequest
}

type DataToken {
  token: String!
}

type FriendRequestData {
  accepted: [User!]
  pending: [User!]
  rejected: [User!]
}

type Query {
  allUsers: [User!]!
  user: [User!]!
  userNotFriends: [User!]!
  me: User!
  allLocations: [Location!]!
  Location(id: Int!): Location!
  allAdventures: [Adventure!]!
  Adventure(id: Int!): Adventure!
  allFriendRequests: [FriendRequest!]!
  userfriendRequests: FriendRequestData!
  AllAdventureRequests: [AdventureRequest!]!
  AdventureRequest(id: Int!): AdventureRequest!
}

type Mutation {
  login(password: String!, name: String!): DataToken!
  createUser(currentLocation: Float, password: String!, name: String!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  deleteUser(id: Int!): Boolean!
  createLocation(createLocationInput: CreateLocationInput!): Location!
  updateLocation(updateLocationInput: UpdateLocationInput!): Location!
  createAdventure(createAdventure: CreateAdventureArgs!): Adventure!
  updateAdventure(adventure: UpdateAdventureArgs!): Adventure!
  createFriendRequest(createFriendRequestInput: CreateFriendRequestInput!): FriendRequest!
  updateFriendRequest(updateFriendRequestInput: UpdateFriendRequestInput!): FriendRequest!
  createAdventureRequest(createAdventureRequest: CreateAdventureRequestArgs!): AdventureRequest!
  updateAdventureRequest(updateAdventureRequest: UpdateAdventureRequestArgs!): AdventureRequest!
}

input UpdateUserInput {
  name: String
  password: String
  locations: [Int!]
  currentLocation: Int
  favoriteLocations: [Int!]
}

input CreateLocationInput {
  name: String!
  lnglat: String
  privacy: String
}

input UpdateLocationInput {
  id: Int!
  name: String
  lnglat: String
  privacy: String
  favoritedBy: [Int!]
  locations: [Int!]
}

input CreateAdventureArgs {
  name: String!
  time: DateTime
  createdBy: Int!
  message: String
  location: Int!
}

input UpdateAdventureArgs {
  id: Int!
  name: String!
  time: DateTime
  message: String
  location: Int!
}

input CreateFriendRequestInput {
  recipient: Float!
}

input UpdateFriendRequestInput {
  id: Int!
  status: String!
}

input CreateAdventureRequestArgs {
  createdBy: Int!
  recipient: Int!
  adventure: Int!
}

input UpdateAdventureRequestArgs {
  id: Int!
  status: String!
}
