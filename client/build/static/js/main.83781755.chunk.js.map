{"version":3,"sources":["ClockLabels.tsx","wands/components/component-styles.ts","wands/components/Bellatrix.tsx","wands/components/DeathEaters.tsx","wands/components/Dumbeldore.tsx","wands/components/Dumbeldore2.tsx","wands/components/Fleur.tsx","wands/components/Ginny.tsx","wands/components/Harry.tsx","wands/components/Hermione.tsx","wands/components/Krum.tsx","wands/components/Longbottom.tsx","wands/components/Luna.tsx","wands/components/Malfoy.tsx","wands/components/Minerva.tsx","wands/components/Narcissa.tsx","wands/components/Ron.tsx","wands/components/Sirius.tsx","wands/components/Slughorn.tsx","wands/components/Snape.tsx","wands/components/Voldemort.tsx","Clock.tsx","NavPanel.tsx","Autocomplete.tsx","Locations.tsx","Friends.tsx","ToolPanel.tsx","Login.tsx","ActivityFeed.tsx","MainPage.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["Labels","locationLabels","friendLabels","userLabel","PlacementPoints","x","y","r","this","LocationLable","styled","foreignObject","FriendLabel","props","color","Icon","svg","attrs","xmlns","viewBox","WandSVG","height","Path","path","fill","rotate","Bellatrix","console","log","d","data-name","DeathEaters","Dumbeldore","Dumbeldore2","Fleur","Ginny","Harry","Hermione","Krum","Longbottom","Luna","Malfoy","Minerva","Narcissa","Ron","Sirius","Slughorn","Snape","Voldemort","randomColor","require","ClockMainContainer","div","ClockFace","circle","SVG","clockProps","Clock","locations","currentLocation","friends","userName","colorArray","i","length","push","userColor","friendLocations","locationsArray","forEach","friend","locationsIncludes","some","location","id","locationsArrayIncludes","placementPoints","radiansBetweenLocations","Math","PI","placeArm","degrees","name","rotateComponent","min","max","elements","ceil","floor","random","clockLabels","clockLabelProps","renderLocations","getPointOnCircle","origin","radius","radian","array","fixedAngleAdjustment","cos","sin","labels","points","xAxis","yAxis","heightAdjust","labelHeight","widthAdjust","labelWidth","locationLabel","width","count","j","friendAdjust","friendLabel","ClockLabels","cx","cy","stroke","strokeWidth","Arm","friendArmElements","makeFriendArms","NavPanelMain","SignOut","NavPanel","navigate","setUserName","clearUserData","onClick","localStorage","removeItem","AutocompleteInput","autocompleteProps","userLocations","setNewLocationName","addLocation","newLocationName","updateAllLocations","handleLocationInput","e","a","locationName","target","value","inputOnClick","res","error","inputStyle","border","backgroundColor","fontSize","textAlign","fontFamily","getItemValue","item","items","renderItem","isHighlighted","style","background","renderMenu","children","renderInput","placeholder","onSubmit","onChange","onSelect","wrapperStyle","flex","UpdateUserInput","updateUserConstructor","CreateLocationInput","UPDATE_USER","gql","CREATE_LOCATION","getLocations","LocationsMain","LocationsTitle","h2","LocationsList","PopupContainer","PopupText","PopupButton","button","Select","select","Locations","setLocations","setCurrentLocation","useState","selectedLocation","setSelectedLocation","currentPopup","setCurrentPopup","popup","setPopup","useMutation","updateUser","updateUserError","createLocation","allLocations","setAllLocations","locationData","useQuery","data","useEffect","updateCurrentLocation","updateUserInput","variables","newCurrentLocation","filter","type","map","loc","handleCurrentLocationUpdate","locationId","Number","parseInt","removeLocation","locationToRemove","find","removeCurrentLocation","createPopup","locationString","getAttribute","locationObj","LocationItems","notCurrent","createLocationInput","then","newLocationData","Error","renderPopup","CreateFriendRequestInput","recipient","GET_NOT_FRIENDS","CREATE_FRIEND_REQUEST","FriendsMain","FriendsTitle","FriendsContainer","Option","option","Popup","Friends","newFriend","setNewFriend","oldFriend","setOldFriend","notFriends","setNotFriends","popupRemove","setPopupRemove","popupAdd","setPopupAdd","pendingFriends","setPendingFriends","notFriendsLoading","loading","notFriendsData","createFriendRequest","userNotFriends","createAddWarning","friendObj","addFriend","createFriendRequestInput","alert","removeFriend","createRemoveWarning","oldFriendString","PendingFriendsList","FriendsList","ToolPanelMain","Button","ToolPanel","activeTool","setActiveTool","setFriends","locationProps","friendsProps","closeWindow","renderTool","LOGIN","Login","setName","password","setPassword","login","getUserData","setItem","token","loginUser","undefined","createNewUser","LoginMain","className","preventDefault","InputContainer","Input","ToolContainer","form","input","UpdateFriendRequestInput","status","HANDLE_FRIEND_REQUEST","ActivityFeed","updateFriendRequest","updateFriendRequestError","acceptFriend","friendId","updateFriendRequestInput","updatedPendingFriends","rejectFriend","updatedFriends","ActivityMain","ActivityHeader","ActivityBody","req","ItemBox","BoxRequestText","AcceptButton","RejectButton","GET_USER","MainContainer","NavPanelContainer","ToolPanelContainer","RightSideContainer","TopBarContainer","ClockContainer","LoginContainer","MainPage","clearStore","useLazyQuery","onCompleted","userData","stateUserData","user","accepted","pending","updateStateVals","onError","fetchPolicy","getItem","navPanelProps","toolBarProps","activityFeedProps","loginProps","renderNavPanelContainer","renderToolPanel","httpLink","createHttpLink","uri","authLink","setContext","_","headers","Authorization","client","ApolloClient","link","concat","cache","InMemoryCache","mainPageProps","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83781755.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Location, User } from \"./MainPage\";\n\nclass Labels {\n  locationLabels: JSX.Element[] = [];\n  friendLabels: JSX.Element[] = [];\n  userLabel: JSX.Element[] = [];\n}\n\ninterface ClockLabelProps {\n  friends: User[],\n  currentLocation: Location,\n  userName: string | null,\n  renderLocations: Location[],\n  userColor: any,\n  colorArray: any\n}\n\n// TODO - change constructor to (private x:number) and remove this.x\nexport class PlacementPoints {\n  x: number;\n  y: number;\n  r: number;\n\n  constructor() {\n    this.x = 50;\n    this.y = 50;\n    this.r = 50;\n  }\n}\n\nexport const ClockLabels = (clockLabelProps: ClockLabelProps): Labels => {\n  const { renderLocations, friends, currentLocation, userName, userColor, colorArray } = clockLabelProps;\n  const radiansBetweenLocations = (2 * Math.PI) / renderLocations.length;\n  const placementPoints = new PlacementPoints();\n  // console.log('these are friends: ', friends)\n\n  const getPointOnCircle = (\n    origin: number[],\n    radius: number,\n    radian: number\n  ) => {\n    const array = [];\n    const fixedAngleAdjustment = Math.PI / 2;\n    const x: number =\n      radius * Math.cos(radian + fixedAngleAdjustment) + origin[0];\n    const y: number =\n      radius * Math.sin(radian - fixedAngleAdjustment) + origin[1];\n    // adjust point based on which quadrant\n    array.push(x, y);\n    return array;\n  };\n  const labels = new Labels();\n  for (let i = 0; i < renderLocations.length; i++) {\n    let radian = radiansBetweenLocations * i;\n    let points = getPointOnCircle(\n      [placementPoints.x, placementPoints.y],\n      placementPoints.r,\n      radian\n    );\n    // Adjust location of point based on which quadrant point is in\n    const xAxis = points[0];\n    const yAxis = points[1];\n    const labelHeight = 20;\n    const labelWidth = 30;\n    let heightAdjust = labelHeight / 2;\n    let widthAdjust = labelWidth / 2;\n    //  console.log(\"this are points: \", points[0], \"x\", points[1], \"y\", renderLocations[i]);\n\n    // TODO place label properly at 6 clock position\n    if (yAxis === 0) {\n      heightAdjust = heightAdjust + 5;\n    }\n    if (yAxis === 100) {\n      heightAdjust = heightAdjust - 5;\n    }\n    if (xAxis > 50) {\n      widthAdjust = widthAdjust - 10;\n    }\n    if (xAxis < 50) {\n      widthAdjust = widthAdjust + 10;\n    }\n\n    const locationLabel: JSX.Element = (\n      <LocationLable\n        key={renderLocations[i].id}\n        x={xAxis - widthAdjust}\n        y={yAxis - heightAdjust}\n        width={labelWidth}\n        height={labelHeight}\n      >\n        <p>{renderLocations[i].name}</p>\n      </LocationLable>\n    );\n    labels.locationLabels.push(locationLabel);\n    if (renderLocations[i].id === currentLocation.id) {\n      const userAdjust = 10\n      const userLabel: JSX.Element = (\n        <FriendLabel\n          key={userName}\n          x={xAxis}\n          y={yAxis - userAdjust}\n          width={labelWidth}\n          height={labelHeight}\n          color={userColor}\n        >\n          <p>{userName}</p>\n        </FriendLabel>\n      );\n      labels.userLabel.push(userLabel)\n    }\n    let count = 0;\n    for (let j = 0; j < friends.length; j++) {\n      if (renderLocations[i].id === friends[j].currentLocation.id) {\n        const friendAdjust = (3 * count);\n        // console.log('this should now be HAPPENING', renderLocations[i].name, count, friendAdjust)\n        const friendLabel: JSX.Element = (\n          <FriendLabel  \n            key={friends[j].id}\n            x={xAxis}\n            y={yAxis + friendAdjust}\n            width={labelWidth}\n            height={labelHeight}\n            color={colorArray[j]}\n          >\n            <p>{friends[j].name}</p>\n          </FriendLabel>\n        );\n        labels.friendLabels.push(friendLabel);\n        count++;\n      }\n    }\n  }\n  // console.log('these are labels: ', labels)\n  return labels;\n};\n\nconst LocationLable = styled.foreignObject`\n  font-size: 6px;\n  // DO NOT MAKE WIDTH AUTO\n  /* width: auto; */\n  height: 300;\n  /* border: 2px solid ; */\n`;\nconst FriendLabel = styled.foreignObject`\n  font-size: 3px;\n  width: 200;\n  height: 300;\n  color: ${(props) => props.color};\n  /* border: 2px solid ; */\n`;\n","import styled from 'styled-components';\n\nconst Icon = styled.svg.attrs({\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 389.6 2628\",\n})``;\n\nexport const WandSVG = styled(Icon)`\n  height: 50%;\n  /* height: ${props => props.height}; */\n`;\n\nexport const Path = styled.path`\n  fill: ${props => props.fill};\n  fill-opacity: 75%;\n  transform-origin: center;\n  transform: rotate(${props => props.rotate}deg) scale(.60) translateY(25%);\n`;","import React from \"react\";\nimport { Path, WandSVG } from \"./component-styles\";\n\nexport const Bellatrix = ({\n  rotate,\n  fill,\n}: {\n  rotate: number;\n  fill: string;\n}): JSX.Element => {\n  // console.log(\"Bellatrix Component Exists\");\n  console.log(\"Bellatrix Rotate\", rotate);\n  return (\n    <WandSVG rotate=\"45deg\">\n      <Path\n        d=\"M220.31,2394.31c-1.92,-7.29,-3.3,-50.09,-3.06,-95.12s1.35,-240.08,2.45,-433.44s0.42,-399.25,-1.53,-457.52c-2.17,-64.72,-1.73,-114.16,1.12,-127c2.57,-11.6,5.82,-39.77,7.22,-62.61s6.75,-79.59,11.88,-126.12s9.33,-98.09,9.33,-114.56c0,-29.24,-19.81,-157.36,-28.77,-186.12c-2.48,-7.94,-6.89,-41.54,-9.8,-74.65c-6.41,-73,-12.39,-105.29,-24.37,-131.67c-5,-11,-9.14,-26,-9.2,-33.25c-0.12,-15.07,-17,-66.36,-28.91,-87.92c-7.77,-14,-26.24,-66.09,-57.84,-163c-8.5,-26.06,-14.41,-52.81,-13.14,-59.44s0,-18,-2.72,-25.36c-4.32,-11.44,-3.15,-15.75,8.43,-30.93c7.39,-9.69,18.43,-18.88,24.51,-20.41s14.81,-6.91,19.39,-12s11.81,-9.2,16.07,-9.2s24.85,-5.43,45.77,-12.07s39,-11.15,40.09,-10s3.8,15.78,5.92,32.54s6.1,35.9,8.83,42.53s7.59,26.12,10.79,43.34s12.89,53,21.52,79.46c19.31,59.29,31.64,139,34.27,221.54c1.1,34.43,4.25,74.53,7,89.1c11.12,59,15.83,79.69,19.23,84.28c17.86,24.11,33.57,187.82,33.57,187.82c4.07,19.9,-1.46,120.74,-9.63,175.75c-2.56,17.19,-3.42,36.14,-1.92,42.11c1.69,6.75,-2,19.94,-9.84,34.87c-7.64,14.62,-13.7,35.82,-15.48,54.2c-1.61,16.6,-3.78,31.62,-4.83,33.36c-1.83,3.05,-4.1,54.79,-9.06,206.33c-1.26,38.4,-4.48,82.83,-7.15,98.72s-4.89,39.13,-4.9,51.62c0,17,5.31,30.67,0,44.66c-6.12,16.08,-13.55,91.12,-16.95,171c-1.63,38.41,-5.09,95.84,-7.69,127.63s-5.54,67.54,-6.51,79.46s-4.18,55.26,-7.11,96.32s-7.45,92,-10,113.18s-6.83,65.19,-9.48,97.79c-4.66,57.24,-9.82,78,-19.4,78c-2.51,0,-6.13,-6,-8.07,-13.24z\"\n        data-name=\"Bellatrix\"\n        rotate={`${rotate}`}\n        fill={fill}\n      />\n    </WandSVG>\n  );\n};\n","import React from \"react\";\nimport { Path, WandSVG } from \"./component-styles\";\n\nexport const DeathEaters = ({\n  rotate,\n  fill,\n}: {\n  rotate: number;\n  fill: string;\n}): JSX.Element => {\n  // console.log(\"DeathEaters Component Exists\");\n  console.log(\"Deth Rotate\", rotate);\n\n  return (\n    <WandSVG>\n      <Path\n        d=\"M210 2468.39c-13 51.22-35.4 35.88-42.78 4.64-15.75-66.59-1-231.06 3.8-322.86 2.8-54-6.12-106.6-6.77-119.19-2.16-42.17 20.25-105.37 15.55-155.2-2.61-27.71-13.54-58.06-15.16-87.87-1.58-29.33 10.21-69.37 8.84-99.47-.85-18.6-7.06-41.16-7.61-59.79-1.35-45 16-92.19 14.54-135.67-1.56-45.54-16-87.38-16.25-129-.17-22.39 10-46.39 10.14-67.1.33-46.72-4.57-84.77-6.35-127.44-3.35-80.11 2.64-156.36 0-215.31-3.52-77.53-15.15-126.8-14.2-131.94 2-11.14 16.75-6.43 14.48-8.69-.37-.38-6.26-14.38-6.07-36.86.06-7.09 5.11-14.37 6-22.87.64-5.86-3-12.58-2.18-19.07 2.74-21.38 6.08-46 6.93-73.32.15-4.89 2.85-9.71 3-14.72.13-4.52-2.29-9.21-2.17-13.8.42-15.45.8-31.31 1.17-47.34.11-4.79 4.24-8.42 4.35-13.24.15-7-3.73-15.26-3.58-22.31.34-16.79.68-33.56 1-50 .11-5.86 4.76-10.34 4.87-16.11.11-5.31-4.32-11.91-4.22-17.12.34-16.74.67-32.9 1-48.13.16-7.18 7-14.15 7.21-20.88.2-8-6.31-15.65-6.1-22.9 1.18-40.33 2.59-68.23 4.57-73.35 6.4-16.53-45.53-8.48-49.27-76.4-5.5-100.3 45.35-117.51 75.23-128.47 26-9.54 68.75-10 87.26 4.77 30.89 24.61 28.69 39.6 29.71 55.44 1.08 17 25.69 6.88 27.83 57.06 1 23.93 1.79 52-11.89 68.06-14.63 17.14-27.39 11.29-26.15 26.55 1 12.33.07 10.79 1.3 48.68.32 9.59 3.87 26.25-6.36 37.79-.88 1-5.26 20.42-53.42 1.61-4.37-1.7-4 12.43-5 16.4-1.46 5.68-8.78 11.56-9.43 18.14-1.22 12.37 5.82 13 4.73 43.17-.12 3.46-4.53 12.87-4.25 16.47.37 4.73 3.43 9.57 3.81 14.55 1.38 18.23-.4 38.67-.27 59.94 0 3.63-1.69 7.49-1.36 11 .25 2.58 2.5 4.82 2.84 7.37 2 14.91 5 29.48 2.4 47.2-.42 2.89-2.14 9.39-2.19 16.94 0 2.92 3.2 8 3.22 11.38.07 10.73-.3 21.06-1 34.88-.6 11.61-7.39 26.49-7 38.36.3 9.1 10.46 9.8 11.42 17.9 3.12 26.07-.89 53.32-1.34 54.69-4.65 14.09 4.41 5 7.45 14.42 3.91 12.11-1.32 47.14-5.6 72.46-3.15 18.63 3.83 64.48 1.8 133.06-.54 18.22-10.55-4.58-8.66 146.48.53 42.27-5.34 84.45-5.6 117.78-.3 36.9 4.61 63.4 4.63 76.69.27 162.4-12.68 215.48-13.77 249.92-1.14 36.13 4.31 94.89 3.69 151.27-.3 27.93-3.46 89.86-4.93 137.69-1.15 37.55-6.65 83.57-7.58 118.76-1.58 60.16 4.22 120.54 3.62 177.35-.49 46.37-5.48 91-6.68 129.5-2.62 82.85-11.01 129.38-13.2 138.05z\"\n        data-name=\"DeathEaters\"\n        fill={fill}\n        rotate={`${rotate}`}\n      />\n    </WandSVG>\n  );\n};\n","import React from \"react\";\nimport { Path, WandSVG } from \"./component-styles\";\n\nexport const Dumbeldore = ({\n  rotate,\n  fill,\n}: {\n  rotate: number;\n  fill: string;\n}): JSX.Element => {\n  // console.log(\"Dumbeldore Component Exists\");\n  console.log(\"Dumb Rotate\", rotate);\n\n  return (\n    <WandSVG>\n      <Path\n        d=\"M227.33 2514c-4.55 2.88-22.82 7-29.93-.62-6.52-7-10.13-221.48-14-227.42-14.76-22.77-13.17-96.85 2.4-112.42 1.95-1.94 3.53-7.5 3.53-12.36 0-9.38 4.33-245.09 5.22-275.25.86-29.47-.63-38.89-7.32-46.28-10.45-11.55-16.9-38.46-17-71.16-.09-20.4 2.12-27.3 11.93-37.1 6.62-6.63 12-14.08 12-16.56s3.25-5.77 7.22-7.29 2-27.5 2-35.31c.06-10.5 8.18-187.51 8-233.32 0-7.73-4.1-35.76-9.2-41.57-20.92-23.84-34-61.37-17.67-101.33 8.52-20.87 29.57-40.1 29-83.63-.26-19.4 5.61-86.57 2.11-149.08-5.87-105.13-20.29-78.84-28.69-100.94-9.9-26.06-7.2-38.22-7.2-42.23 0-5.28.65-47.73 17.89-63.55 15.33-14.06 15-12.53 18.71-86.42 2.12-42.09-2.4-77.13-3.92-104.78-3.78-69-14.42-62.74-18.63-66.55-9.56-8.65-14.05-101.77-14.05-105.92 0-5.43 33.72-27.76 33.78-44.22.06-19.22.88-47.21-1.34-105.11-.56-14.72-23.09-34-25.23-79.14-1.44-30.52 31.28-61.52 28.92-68.94-1.86-5.82-5.86-19.37-8.86-30.16s-9.36-23.4-14-28c-11-11-10.63-20 1.22-31.81 10.29-10.3 16.06-11.23 31.3-5 6.5 2.63 12.47 1.41 18.34-3.76 11.26-9.88 34.69-8 51.84 4.24 21.25 15.13 22 26.11 4.3 62.7l-15.74 32.54 15.18 22.91c19.3 29.14 20.24 55.54 3.14 87.67-8.77 16.46-13.5 28.62-11.83 56.21.54 8.79-.21 19.47-.21 32.66 0 37 1.95 66.26 4.42 66.26s8.94 7.3 14.45 16.22c8.19 13.26 10 24.07 10 59.13 0 44.08-6.83 64.32-21.72 64.32-9.13 0-11.06 15.67-15.12 122.8-4.4 115.94-4.46 115 8.57 133.32 20.43 28.69 17.16 87.86-6.64 120.1-8.37 11.34-9.83 26.61-14.49 151.79l-5.19 139.18 14.04 21.18c18.48 28 18.83 59.88 1.05 97-6.89 14.36-13.65 30.44-15 35.73s-3.92 69.23-5.65 142.08l-3.14 132.44 12.85 27.92c16.93 36.8 17.12 69.7.56 94.73-13.55 20.47-13.94 24.19-22.68 214.53-4.93 107.23-4.68 123.34 2.21 146.56 10 33.62 9.77 45.62-1.56 82.83-7.64 25.14-9.68 49.85-11.39 138.29-1.67 84.65-3.54 108.52-8.78 111.89z\"\n        data-name=\"Dumbeldore\"\n        fill={fill}\n        rotate={`${rotate}`}\n      />\n    </WandSVG>\n  );\n};\n","import React from \"react\";\nimport { Path, WandSVG } from \"./component-styles\";\n\nexport const Dumbeldore2 = ({\n  rotate,\n  fill,\n}: {\n  rotate: number;\n  fill: string;\n}): JSX.Element => {\n  // console.log(\"Dumbeldore2 Component Exists\");\n  console.log(\"Dumb Rotate\", rotate);\n\n  return (\n    <WandSVG>\n      <Path\n        d=\"M202.89 872.9c2.68-2.56 5-209.84 3-237-1.5-20.36-5.91-36.51-13.15-48.16-8.25-13.27-11.12-25.71-11.81-51.24-1.21-44.91 5.24-64.51 23.34-70.81 13.8-4.82 14.16-5.77 13.92-36.9-.15-17.57 0-47.26.36-66s-2.68-45.8-6.7-60.2c-15-53.75-10.43-86.28 14.11-100 6.7-3.75 6.41-6.57-2.53-25.39-5.53-11.65-14.41-28.66-19.72-37.8-7.34-12.64-8.23-17.53-3.72-20.4 3.26-2.07 4-3.8 1.73-3.84-8.37-.15 8-14.52 16.56-14.52 5.43 0 19-5.85 33.72-6.83 21.2-1.41 44.87 2.37 50.43 7 11.08 9.19 8.29 31.48-7.41 59.3-7.95 14.08-14.45 28.28-14.45 31.55s5.73 13.47 12.72 22.64c11.65 15.28 12.48 19.28 9.83 47.64-1.59 17-7.57 40.15-13.3 51.37-9 17.66-10.5 29.08-11 84.36l-.62 63.94 31.39 28.67-1.9 40.5c-1.75 37.26-9.3 60.61-22.86 70.74-4.53 3.39-12.87 36.51-16.36 65-1.38 11.27-4.89 149.33-6.87 204.88 7 5.51 10.88 12.83 16 29.41 11.9 38.48 7.49 71.79-13.62 102.94-9.46 14-9.86 21.2-9.86 179.56 0 115.53 1.61 166 5.34 168.45 2.94 1.89 8.31 11.72 11.93 21.83 6 16.8 5.59 21-4.76 48.16-20.06 52.73-14.54 241.76-10.46 318.72 1.87 35.17 5.86 44 11.41 55.88 9.11 19.54 5.08 58.06-4.32 74.51-8.15 14.24-13.18 19.66-14.63 76.1-1.17 45.8 1.77 101.75 1.77 101.75.36 50.54.75 102.54 1.06 141.33.09 12.06-.81 24.9 6.37 43.29 4.91 12.56.21 34.75-3.05 43.54-5.76 15.53-8.42 33.73-7.78 60.8.63 26.65-5.92 75.25-6.57 108.36-1.39 70.68-6.29 86.69-26.56 86.69q-14 0-16.1-8.43c-1.15-4.64-1-43.1.35-85.49 3.94-124.85 3.14-147.71-5.75-163.74-9.83-17.71-10.09-29.21-1.24-54.31 5-14.11 7-46.16 7.37-117.39.29-53.9 1.75-124.13 3.26-156.07 2.65-56.47 5.71-57.34-4.25-72.24-17.71-26.5-15-56.64-6.31-76.63 9.73-22.39 6.62-20.51 5.32-132-.71-59.91 3.32-158.56 2.9-175.11-1-39.48-5.56-70.51-10.87-73.79-5.55-3.43-5.54-39.24 0-42.66 2.35-1.46 4.56-44.39 4.92-95.4.6-85.06 6.73-217.38 12.38-267.32 0-.23 0-.46.08-.69a20.92 20.92 0 0 1-4.16-1.61c-9-4.7-15.73-24.38-18.24-35.82-3.49-15.9-4.24-41.84-2.71-59.54 2.45-28.48 19.18-41.04 22.07-41.58z\"\n        data-name=\"Dumbeldore2\"\n        fill={fill}\n        rotate={`${rotate}`}\n      />\n    </WandSVG>\n  );\n};\n","import React from \"react\";\nimport { Path, WandSVG } from \"./component-styles\";\n\nexport const Fleur = ({\n  rotate,\n  fill,\n}: {\n  rotate: number;\n  fill: string;\n}): JSX.Element => {\n  // console.log(\"Fleur Component Exists\");\n  console.log(\"Dumb Rotate\", rotate);\n\n  return (\n    <WandSVG>\n      <Path\n        d=\"M247.78 2484.49c-2.62-4.89-4.75-27.34-4.75-49.9s-2.93-52.5-6.5-66.54c-6.48-25.47-6.55-47.32-.52-163.45 1.93-37.12.65-93.51-3.27-144.48-4.16-54.13-5.8-137.21-4.66-235.65 1.21-104.57.1-155.14-3.54-161.94-5.7-10.65-9.38-145.54-4.2-153.92 3.66-5.93 3.77-169.57.16-244.86-1.4-29.14-.23-86.57 2.59-127.62 3.6-52.43 3.61-93.29.07-137.26-2.78-34.43-5-68.65-5-76s-3-20.86-6.8-30c-8.22-19.68-9-62.31-1.57-83.68 4.8-13.76 4.07-16.58-7.22-27.86-15.15-15.16-16.36-35.47-3.6-60.51 6.59-12.91 7.55-19 3.61-23s-3.43-7 1.88-11.13c17.16-13.53 20.42-23.37 22-66.43.89-24.17-.49-55.06-3.07-68.64-3.91-20.62-24-58.32-43.72-82.21-18.83-22.77-43.35-69.19-53.6-101.46-24.59-77.43-7.42-181.67 36.66-222.53 30.26-28 88.91-38 127.36-25.64 10 3.21 18.65 7 25.51 12 9.31 6.84 27.51 21.41 44.21 55.31 13.19 26.66 15.47 36.48 14.87 62.91-.76 33.09-11.07 68.37-24.21 82.89-7.35 8.12-7.17 9.48 2.53 19.81 11.36 12.09 13.79 36.12 5.28 52-3 5.62-3.41 12-1 15.33 2.31 3.14 4.78 12.59 5.48 21 1 11.86-2.7 19.67-16.51 35l-17.74 19.67.59 54.13c.59 53.33 1.32 61.5 6.69 75.8 1.5 4 6.43 21.68 11 39.34 9.72 37.84 6.93 60.28-10 80.41-14.35 17-14.62 20.61-2.22 29.55 5.3 3.82 9.63 12 9.63 18.2s2 10 4.47 8.5c14-8.64 14.45 65.15.6 95.55-5.43 11.93-9.88 27.77-9.89 35.21s-3.11 31.14-6.9 52.68-8.19 66-9.76 98.73-3.85 76.89-5.06 98.08-3.34 87.29-4.73 146.89-3.58 138.7-4.85 175.78-3.63 130.27-5.25 207.09-4.54 180.84-6.49 231.17-4.2 150-5 221.53-2.1 138.7-2.88 149.3-2.82 48.52-4.53 84.28-5.28 70.77-7.93 77.8c-6.06 16.08-21.66 20.93-28.17 8.77zM231.18 439c1.54-7.29 4.73-16.85 7.11-21.26 2.93-5.45 2.06-9.88-2.7-13.83-12.06-10-8.54-36.28 7.28-54.29l14.29-16.28-13.6-13c-26.55-25.43-31.09-69.14-10-96 11.54-14.68 38.93-24.55 57.68-20.8 29.54 5.91 16.21-25.13-17.36-40.42-53.06-24.18-106 4.33-122 65.73-5.71 21.83-3.9 77.52 3.75 115.35 4.93 24.37 19.31 55 25.84 55.06 1.91 0 11.09 11.95 20.41 26.52s19.1 26.48 21.73 26.48 6.04-5.97 7.57-13.26z\"\n        data-name=\"Fleur\"\n        fill={fill}\n        rotate={`${rotate}`}\n      />\n    </WandSVG>\n  );\n};\n","import React from \"react\";\nimport { Path, WandSVG } from \"./component-styles\";\n\nexport const Ginny = ({\n  rotate,\n  fill,\n}: {\n  rotate: number;\n  fill: string;\n}): JSX.Element => {\n  // console.log(\"Ginny Component Exists\");\n  console.log(\"Dumb Rotate\", rotate);\n\n  return (\n    <WandSVG>\n      <Path\n        d=\"M201.85 2503.51c-5.88-2.22-12.38-10.09-14.45-17.49-5.72-20.47-3.22-370.41 4.14-581.74 9-257.23 9.13-993.26.22-998.77-10.91-6.74-6.2-118.54-6.2-118.54l2.44-21.68c1.34-11.92-2-51.89.23-72.24 3.51-32.44 3.59-28.92-1.67-69.83-2.39-18.54-3.54-61.88-2.57-96.32s1.45-69.11 1.07-77c-.92-19.08-.7-33.87 1.87-125.22 1.19-42.38.66-80.31-1.19-84.28s-1.17-12.64 1.5-19.26 5.21-27.21 5.62-45.76c1.13-50.07 22.87-84.28 53.57-84.28 27.17 0 45 31.94 51 91.29 5.76 57 5.64 59.5-3.12 65.9-7.07 5.17-6.88 7.43 2.19 25.19 12.67 24.85 12.62 45.74-.17 66.42-8.15 13.2-9 17.73-4.18 23.49 7.84 9.45 6.6 51.93-2 68.56-6.08 11.76-5.85 15.05 2.12 30 10.88 20.44 11.92 51.95 2.19 65.85-6.14 8.76-6.26 12.93-.78 28.77 7.09 20.5 3.2 44.59-8.79 54.54-5.83 4.84-6.06 7.83-1.26 16.26 7.59 13.32 11.24 253.79 4.14 272.28-2.82 7.34-6 105.71-7.6 236.51-4.77 384.87-7.44 545.17-9.82 587.55-1.27 22.51-3.5 106-5 185.41-3.83 207.84-15 531.43-19.36 559.09-2.07 13.19-14.68 29.38-28.67 36.82-2.65 1.4-9.63.73-15.51-1.49z\"\n        data-name=\"Ginny\"\n        fill={fill}\n        rotate={`${rotate}`}\n      />\n    </WandSVG>\n  );\n};\n","import React from \"react\";\nimport { Path, WandSVG } from \"./component-styles\";\n\nexport const Harry = ({\n  rotate,\n  fill,\n}: {\n  rotate: number;\n  fill: string;\n}): JSX.Element => {\n  // console.log(\"Harry Component Exists\");\n  console.log(\"Dumb Rotate\", rotate);\n\n  return (\n    <WandSVG>\n      <Path\n        d=\"M200.69 2343.74c2.05-80.13 4.27-164.11 4.93-186.62 2.62-89.9 5.62-639.39 4.28-693.91-1-41.49-.62-90.59-1.32-174.46-.11-13.27-1.53-87-1.63-101-.59-81-1-132.61-1.11-227.42-.26-190.35-1-208.11-8.86-219.71-5.73-8.43-9.14-17.48-11.38-34.64-2.17-16.58-.23-40.56-.4-63.21-.16-22.9 8.31-43.13 12.58-60.91 5.78-24.1 5.83-356.59-2.91-359.52-3.22-1.08-7.34-9.94-9.15-19.68s-9.73-30.06-17.61-45.15-13-30.89-11.38-35.17c4.06-10.57 41.36-26.34 70.47-29.78 16.35-1.94 32.49-.2 50.37 5.42 22 6.92 28.72 11.91 41 30.39 8.06 12.17 14.65 26.36 14.65 31.54S324.56 182 314 197.42l-19.16 28.06 2.65 73.65c1.46 40.52 3.55 129.63 4.65 198 1.77 109.71 3.1 126.87 11.3 145.41 16.81 38 15.25 77.07-3.86 96.62l-13.94 14.26-3.1 192.58c-1.72 105.89-5.47 214.1-8.35 240.46a576.65 576.65 0 0 0-1.55 96.32c2 26.62 4.05 53.81 4.51 60.43a70.23 70.23 0 0 1-3.08 23.25c-2.15 6.16-3.82 25.67-3.72 43.35.75 126.67-.29 228.33-2.38 231.72-1.84 3-3.37 397.85-1.72 443.35.14 4-1.1 13.72-2.77 21.67s-6.06 92-9.77 186.81c-4.67 119.6-6.33 166.26-15.09 184.45-2.69 5.6-13.55 11.28-24.71 11.69-12.72.47-25.75-5-26.24-8.91-3.09-24.28 3.02-136.85 3.02-136.85z\"\n        data-name=\"Harry\"\n        fill={fill}\n        rotate={`${rotate}`}\n      />\n    </WandSVG>\n  );\n};\n","import React from \"react\";\nimport { Path, WandSVG } from \"./component-styles\";\n\nexport const Hermione = ({\n  rotate,\n  fill,\n}: {\n  rotate: number;\n  fill: string;\n}): JSX.Element => {\n  // console.log(\"Hermione Component Exists\");\n  return (\n    <WandSVG>\n      <Path\n        d=\"M220.15 2526.75c-5.05-8-7.54-36.07-9.51-107.16-3.49-125.53-11.84-370.9-14.93-438.26-1.33-29.13-2.68-135.32-3-236s-2.26-187.34-4.33-192.64-1.8-13.41.6-18 4.25-43.63 4.1-86.68c-.29-87.16-1.05-101.28-5.56-104.78-1.71-1.32.06-18.66 3.95-38.52 4.54-23.28 6-47.26 4-67.43-5.88-59.46-7.42-220.76-2.32-243.5 5.61-25 7.12-114.79 2.07-123-4.21-6.82-5.53-81.43-1.44-81.43 1.71 0 3-4.87 2.94-10.83s0-32.51.18-59c.38-54.9-.79-72.39-5.89-88.24-2.46-7.62-1.13-13.92 4.19-19.79 6.51-7.2 6.84-10.91 2-22.53-6.29-15.16-8.88-127.09-2.94-127.09 2 0 2.74-23.74 1.7-52.76s-.34-65.93 1.56-82c2.63-22.38 1.77-31.67-3.65-39.42-5-7.08-5.69-12.48-2.41-17.9 2.58-4.27 4.45-27.81 4.13-52.31s1.16-44.54 3.27-44.54 3.84-2.17 3.84-4.82-2.71-4.28-6-3.61c-4.26.85-6.14-7.51-6.44-28.64-.4-27.75.45-30.19 12-34.94 6.85-2.8 25.46-6.16 41.35-7.45 22.8-1.86 32.06-.44 43.86 6.75l14.95 9.11-.61 43.7c-.35 25.05-2.92 46-6 49.11-3.84 3.83-4 10.49-.56 23s3.22 22.07-.62 32.71c-4.07 11.24-4.1 26.15-.13 57.83 6.46 51.57 6 118.67-1 140.61-4.07 12.77-3.41 20.5 3.22 37.87 6.49 17 7.44 27.31 4.3 46.56-3.82 23.46-4.76 122.93-1.79 190.89.75 17.22 1.05 45.39.66 62.61s-.42 47.56-.06 67.42c.9 50.36-4.2 162.39-7.64 168-1.57 2.54-.51 10.75 2.35 18.26 3.88 10.15 3.64 18.43-.93 32.3-5.17 15.7-4.86 24.81 1.92 57.79 8.15 39.63 7.2 55-4.57 73.32-5 7.74-6.31 32.93-5.68 108.36.46 54 2.58 101.77 4.72 106.05 3.81 7.65 0 72.27-10.29 172.81-3.35 32.85-3.52 54.16-.5 60.83 2.94 6.49 3.13 47.2.51 110.77-12.58 305.79-19.06 531.25-19.15 667.59-.06 74.2-.83 81.44-9.69 90.3-12.57 12.57-22.25 12.19-30.69-1.2z\"\n        data-name=\"Hermione\"\n        fill={fill}\n        rotate={`${rotate}`}\n      />\n    </WandSVG>\n  );\n};\n","import React from \"react\";\nimport { Path, WandSVG } from \"./component-styles\";\n\nexport const Krum = ({\n  rotate,\n  fill,\n}: {\n  rotate: number;\n  fill: string;\n}): JSX.Element => {\n  // console.log(\"Krum Component Exists\");\n  return (\n    <WandSVG>\n      <Path\n        d=\"M174.82 2465.35c-9.73 0-20.54-.36-23.88-15.59-2.84-13 0-77.75 0-82.22 0-7.88 41.91-976.66 44.73-991.22 2.19-11.34 28.06-319.52 39-457.8.28-3.58-3.22-9.14-3-12.48.79-10-.43-27.8 5.39-32.42 3.71-2.94 4.18-14.75 4.89-27.72 1.72-31.51 15.77-179 30-232.76 10.84-41.07 16.35-99.32.75-150.78-6.6-21.77-17.19-32.83-35.4-57-25-33.14-86.52-84.91-92.84-95.77-36-62-18.07-144.69-12.21-164 8-26.46 37.89-31 75.25-32.24 15.13-.5 35.16 2.14 38.62 0s11.51-2.61 17.88-1q18.51 4.64-.89 27.34c-3.6 4.21-13.2 25.89-21.34 48.16-13 35.57-14.13 42.64-9.46 58.27 6 20 41.43 53.49 66.25 62.6 12.47 4.57 19.13 13.05 35.07 44.62 10.82 21.44 22.83 50.84 26.69 65.35 12.75 47.94 7.28 175.77-15 349-4.42 34.43-10.33 58.74-11.27 79.6-.14 3.09-3.88 24.89-2.36 28 2.39 4.82-.08 33.76-2.06 36.3-.85 1.07-4.34 4.77-5.31 8.08-1.71 5.78-.91 13-2 21.4-1.67 13.25-5.24 40.34-7.92 60.2-8.24 60.83-23.43 196.69-28.8 257.66-2.81 31.79-7.23 76.21-9.83 98.73-5.11 44.13-7.09 68.61-28.68 354-24.15 319.2-22.75 296-38.45 638.12-4.74 104.39-8.02 115.57-33.82 115.57z\"\n        data-name=\"Krum\"\n        fill={fill}\n        rotate={`${rotate}`}\n      />\n    </WandSVG>\n  );\n};\n","import React from \"react\";\nimport { Path, WandSVG } from \"./component-styles\";\n\nexport const Longbottom = ({\n  rotate,\n  fill,\n}: {\n  rotate: number;\n  fill: string;\n}): JSX.Element => {\n  // console.log(\"Longbottom Component Exists\");\n  return (\n    <WandSVG>\n      <Path\n        d=\"M182.16 2047.13c2.69-214.13 11.76-1240.62 13.21-1322.77 2.07-116.55 3.42-220.57 3-231.17-.72-18.55-.83-56.5-.25-86.69.89-46-3.52-90.07-11.33-113.24-11.87-35.26-12.33-101.77-.79-124.69 4.52-9 8.28-19.85 8.37-24.08s2.79-10.93 6-14.91c7.87-9.69 31.58-21.64 35.39-17.83 1.67 1.67 12-2.07 22.88-8.32 34.24-19.63 40-19.84 51-1.83 15.16 24.87 13.29 69.34-4.88 116.06-8 20.63-13 40.11-11 43.27 3.75 6.06 12.5 103.18 12.24 135.94-.46 60-5.08 156.22-7.7 160.46-4.08 6.6-18 230.42-19.92 321.14-.86 39.73-2.79 106.92-4.3 149.3-1.84 51.82-3.74 115.12-5.55 184.19-2.44 235.11-7.16 550.78-13.19 771.77.18 66.89-2.7 185.62-8.2 322.68-5.9 146.85-10.77 145-16.84 161.34-11.34 30.47-47.59 23.47-53.64 9-10.82-25.87-5.68-73-5.28-117.95.01-4.47 9.96-246.38 10.78-311.67z\"\n        data-name=\"Longbottom\"\n        fill={fill}\n        rotate={`${rotate}`}\n      />\n    </WandSVG>\n  );\n};\n","import React from \"react\";\nimport { Path, WandSVG } from \"./component-styles\";\n\nexport const Luna = ({\n  rotate,\n  fill,\n}: {\n  rotate: number;\n  fill: string;\n}): JSX.Element => {\n  // console.log(\"Luna Component Exists\");\n  return (\n    <WandSVG>\n      <Path\n        d=\"M256.15 2475c-6.83 6.84-27.46 11.31-38.24 3.94-8.81-6-8.65-23.19-8.85-26.31-4.36-70.38-8.1-453.83-7-794.81.91-283.93-2-363.27-8.7-563.88-.74-22.23-9.87-36.23-11.59-45.47-2.24-12 1.43-48 11.78-54.39 2.65-1.63 11.8-137.7 11.51-195.14-.16-30.82-2.74-89.15-2.74-89.15l-6.68-12c-7.06-12.62-7.52-29.41-5.43-39.56 1.75-8.46 5.36-16.24-1.29-30.4-5.71-12.14-12.54-27.8-13.42-37.72-9.26-104.6 5-162.69 13.33-207.69 5-27 10.1-63.27 17-120.4 1.6-13.24 6.18-136.44 4.7-150.36-1.75-16.38 7.35-19.87 19.77-8.63 9.53 8.63 31.61-12 37.18-12 1.77 0 10-3.93 13.28 9.48.81 3.4 2.32 16 6.46 20.17s15-6.39 17-.37c2.14 6.43-4.18 38.91-4.18 38.91-6.18 37.44-1.29 152.24 12 281.74 6.69 65.14 6.73 77.08.31 110.77-7.13 37.42-11.6 50.6-25 73.88-4.21 7.29-7 25.33-7 45.75-.06 20.09-3 39.19-7.18 47.27-5.92 11.36-6.59 33.69-4.11 137.26 2.57 107.15-6.9 121.6 4.76 134.4 10.5 11.53 11.67 25.62 10.89 45.74-1 25.14-9.44 13.86-10 74.19-.49 55.5.12 172.67-2.1 488.22-3.77 537.77-4.72 662.62-6 788.62-.75 71.26-1.69 79.15-10.46 87.94z\"\n        data-name=\"Luna\"\n        fill={fill}\n        rotate={`${rotate}`}\n      />\n    </WandSVG>\n  );\n};\n","import React from \"react\";\nimport { Path, WandSVG } from \"./component-styles\";\n\nexport const Malfoy = ({\n  rotate,\n  fill,\n}: {\n  rotate: number;\n  fill: string;\n}): JSX.Element => {\n  // console.log(\"Malfoy Component Exists\");\n  return (\n    <WandSVG>\n      <Path\n        d=\"M185.75 2463c-8.78-10.58-8.76-15.3 3.09-717.63 1.8-105.95 3.55-341.64 3.91-523.74.52-263.84-.58-331.1-5.43-331.1-7.92 0-15.46-14.84-12.23-24.08 1.38-4 6.51-10.06 11.39-13.52 13-9.25 12.52-53.92-.77-65.94-12.53-11.35-12.23-24.13.78-33.24 10-7 10.48-11.26 12.16-107.42 1-55.08 3.93-185.47 6.57-289.75L210 167l16-34.39c8.74-18.88 19.8-37.54 24.57-41.45 7.87-6.47 9.88-5.66 22 8.91 7.36 8.82 18.23 31.12 24.16 49.55 10.68 33.19 10.75 35.4 7.63 231.88-5.55 350.14-5.39 363 4.59 381.56 8.68 16.12 8.66 16.49-1.83 27.65-14.51 15.44-15.1 55.74-1 68.5 12.11 10.95 12.21 21.9.36 37-8.5 10.8-9.32 20.9-9.79 119.84-.27 59.43-1.5 115.64-2.72 124.91s-4.4 88.38-7.08 175.79-6 183.85-7.33 214.31-5.66 148.57-9.57 262.47-9.31 248.27-12 298.59c-13.8 258.43-20.05 362-22.29 369.63-3.2 10.94-41.1 11.89-49.94 1.25z\"\n        data-name=\"Malfoy\"\n        fill={fill}\n        rotate={`${rotate}`}\n      />\n    </WandSVG>\n  );\n};\n","import React from \"react\";\nimport { Path, WandSVG } from \"./component-styles\";\n\nexport const Minerva = ({\n  rotate,\n  fill,\n}: {\n  rotate: number;\n  fill: string;\n}): JSX.Element => {\n  // console.log(\"Minerva Component Exists\");\n  return (\n    <WandSVG>\n      <Path\n        d=\"M189.44 2498.81c-1.73-2.78-1.87-44.51-.33-92.71 7.82-244.52 12.43-1344.9 5.73-1365.32-2.14-6.49-1.43-13.74 1.71-17.52 3.45-4.15 7-60.25 9.89-157.49 2.5-83.08 5.64-168 7-188.84 2.24-34.77 1.48-39-9.49-53.43-14.32-18.78-15.09-29.53-2.67-37.28 9.13-5.7 9.13-5.94 0-17.55-5.09-6.47-9.19-15.27-9.1-19.54.19-9.56 11.16-24.64 17.92-24.64 2.73 0 6.29-3.42 7.9-7.61 5.6-14.6 2.84-27.7-9.12-43.38-6.62-8.69-12-17.16-12-18.84s-5.62-10.41-12.47-19.41c-24.24-31.77-19.26-71.17 11.78-93.28 18.46-13.14 27.09-44.63 17.38-63.41-11.8-22.82-14.22-51.72-5.17-61.72 7.13-7.88 7.2-9.47.64-14.92-10.06-8.35-9.38-32.18 1.08-38.12 6.93-3.93 7.42-6.44 2.74-14.1-9.49-15.51-12.92-43.51-6.3-51.47 7.33-8.85 57.9-9.91 66.41-1.4 8 8 7.2 32.33-1.55 49.1-6.76 13-6.6 14.41 2.44 20.74 11.39 8 12.43 20 2.85 33-5.95 8.11-5.91 10.39.26 17.23 10.14 11.24 8.09 47.77-3.32 59.3-12.3 12.42-3.53 36.84 24.88 69.28 29.08 33.2 29.51 71.39 1.16 101.93-17.62 19-35.39 45.48-35.39 52.8 0 4.47 5.24 13 11.63 19 15.83 14.87 19.22 31.6 10.12 49.85-6.71 13.45-6.73 15.49-.18 19.15 10.6 5.94 9 17.33-4.92 35.63L268.64 640l-2.51 199c-1.39 109.48-4.26 216.24-6.38 237.24s-4.25 96.51-4.71 167.79-1.59 130.89-2.5 132.44-3.12 89.53-4.89 195.53c-5.67 340-21.75 832.69-29.59 906.62-2.4 22.63-3.88 25.28-14.09 25.28-6.28 0-12.82-2.28-14.54-5.06z\"\n        data-name=\"Minerva\"\n        fill={fill}\n        rotate={`${rotate}`}\n      />\n    </WandSVG>\n  );\n};\n","import React from \"react\";\nimport { Path, WandSVG } from \"./component-styles\";\n\nexport const Narcissa = ({\n  rotate,\n  fill,\n}: {\n  rotate: number;\n  fill: string;\n}): JSX.Element => {\n  // console.log(\"Narcissa Component Exists\");\n  return (\n    <WandSVG>\n      <Path\n        d=\"M178.9 2477c-3-7.79 1.75-208.17 5.85-247.59 4.88-46.8 17.82-813.25 18.43-1090.83.66-308.15 2.52-319.21-13.29-339.18-2.91-3.68-13.81-9.37-19-18.78-6.43-11.56 2-44.25 9-50.26 16.35-14.07 21.92-39.8 12.65-58.44-2.75-5.53-10.42-59-12.25-124.16-1.65-59.3 2.3-130 4.13-151 2.18-24.93 11.06-67.31 9.68-101.93-1.13-28.26-26.48-55.47-26.25-63.35.38-12.42 12.91-25.35 15.54-39 2.66-13.83-13-13.72 1.54-37.38 8.29-13.48 10.57-18.08 22.07-31.47 24.85-28.92 25.18-31.24 61.73 2 11 10 18.21 19.92 25.2 27.63 14.91 16.45 1.31 28.78 1.93 35.69 1.74 19.6 18.28 27.37 18.75 42.09.66 21.07-21.76 19.68-19.85 77.44.64 19.56 3.82 46.29 4.91 59.53s3.2 36 4.71 50.57c5.16 49.78 5 121.62.31 185.49-1.82 24.85-4.32 48.5-7.45 69.17-3.94 26.07-3.46 32 3.24 39.43 4.34 4.79 6.55 19 11.81 20.36 8.06 2.11 9.58 6.61 9.58 28.29 0 19.83-2.05 27.05-8.88 31.32-9.19 5.74-26.22 55.69-27.64 81-.44 8-2.16 40.46-3.83 72.24s-4.08 76.22-5.37 98.73c-3.52 61.36-7 176.78-12.26 409.36-4.66 205.19-11.84 429.13-16.66 520.13-14 264.34-17.67 330.19-21.86 392.5-6.37 94.86-8.51 107.52-19.2 113.24-13 7-23.86 5.81-27.2-2.9z\"\n        data-name=\"Narcissa\"\n        fill={fill}\n        rotate={`${rotate}`}\n      />\n    </WandSVG>\n  );\n};\n","import React from \"react\";\nimport { Path, WandSVG } from \"./component-styles\";\n\nexport const Ron = ({\n  rotate,\n  fill,\n}: {\n  rotate: number;\n  fill: string;\n}): JSX.Element => {\n  // console.log(\"Ron Component Exists\");\n  return (\n    <WandSVG>\n      <Path\n        d=\"M214.49 2493c-7.54-5.51-8.21-16.72-7.14-119.19 2-194.11-.1-733.9-3.83-965.54-2-121.84-2.86-231.29-2-243.21 1.92-26.68 1.87-35.89-1.74-339.53-3.06-257.5-5.68-328.86-12.39-337-2.22-2.71-3.46-24.43-2.75-48.27s-.66-45.83-3-48.88c-7.75-9.89.85-72 .85-77 0-5.87 4.82-22.71 4.82-30.69s-2-18.28-4.41-22.88c-18.2-34.5-22-95.53-14.21-120.33 4.62-14.72 14.91-22.71 25.22-31.57C211.82 93.42 237.07 86 254.52 91c7.64 2.19 14.88 3 16.07 1.8 5.09-5.08 46.91 43.55 52 60.43 5.58 18.61.7 51.79-15.42 104.87-5 16.39-4.94 27.44.18 58.94 3.46 21.32 4.95 50.16 3.32 64.11s-4.15 39.43-5.59 56.65-4.75 52-7.36 77.24c-13.63 132.36-15.48 199-21.51 775.19-1.27 120.52-2.49 233.21-2.73 250.43s-.23 44.31 0 60.2c1.69 103.77-7.27 439.67-13.8 517.72-2.77 33.11-5.36 116.22-5.75 184.68-.63 110.5-2.82 145.63-11.47 184.95-2.67 12.1-15 14.2-28 4.74z\"\n        data-name=\"Ron\"\n        fill={fill}\n        rotate={`${rotate}`}\n      />\n    </WandSVG>\n  );\n};\n","import React from \"react\";\nimport { Path, WandSVG } from \"./component-styles\";\n\nexport const Sirius = ({\n  rotate,\n  fill,\n}: {\n  rotate: number;\n  fill: string;\n}): JSX.Element => {\n  // console.log(\"Sirius Component Exists\");\n  return (\n    <WandSVG>\n      <Path\n        d=\"M184.18 2514.63c-8.5-5.41-9.78-172.56-3-388.82 15-478.66 19.69-783 16.91-1107.68-1.21-143-2.51-404.66-2.89-581.4-.66-320.6-.64-321.35 9.47-331.46 13-13 44.15-17.12 71.54-9.46 37.27 10.44 36.83 8.21 36.45 183.87-.18 85-1.27 156.07-2.42 157.93s-2.32 61.73-2.58 133-2.45 181.65-4.85 245.22c-6 159.67-9.11 259.43-12.29 397.32-1.49 64.9-5.94 178.68-9.88 252.84-13.47 253.66-15.76 298.72-20.75 407-7.51 162.86-10.22 206.38-15 241.52-2.41 17.6-4.35 67.91-4.29 111.79.09 76.45-7.38 234-12.63 266.7-3.38 20.89-26.77 32.46-43.79 21.63z\"\n        data-name=\"Sirius\"\n        fill={fill}\n        rotate={`${rotate}`}\n      />\n    </WandSVG>\n  );\n};\n","import React from \"react\";\nimport { Path, WandSVG } from \"./component-styles\";\n\nexport const Slughorn = ({\n  rotate,\n  fill,\n}: {\n  rotate: number;\n  fill: string;\n}): JSX.Element => {\n  // console.log(\"Slughorn Component Exists\");\n  return (\n    <WandSVG>\n      <Path\n        d=\"M245.65 2367.4c-.88 27.35-2.26 121.66-17.33 121.5-15.78-.18-18.31-60.75-17.73-98.53.67-43.48 0-1269.77 6.15-1357.48C223.43 937 218.85 891 200 865c-17.52-24.19-17.51-29.69.11-37 7.75-3.22 17.84-10 22.42-15 7.94-8.77 7.74-9.69-4.47-20.18-15.71-13.5-15.91-18.11-1.42-31.72L228 750.43l-8.74-32.58c-5.76-21.48-7.81-40.69-6-56.38 4-34.52.83-65.76-1-117.71-3.35-94.41 7.6-188-4.38-192.56-14.88-5.66-15.76-15.84-2.14-24.89 9.08-6 9.6-8.67 5-25.87-2.79-10.53-5.53-32.7-6.09-49.25-.69-20.58-1.88-26.41-7.12-30.1-2.74-1.94-61.08-46.91-67.77-59.53-7.16-13.53-1.76-41.35 9.4-48.38 6.47-4.07 12.41-3.07 26.06 4.36 9.72 5.3 18.67 12.89 19.87 16.86 1.34 4.42 16.32 32.28 20.49 42.19 9.71 22.87 26.82 32.41 50.42 27.93 18.6-3.49 33.26-17.76 38.18-33.18 17.44-54.64 28.5-67.72 42.22-75.33 11.82-6.55 13.9-6.5 20.93.54 4.3 4.3 5 11.71 5.46 16.81 1.59 18.86-5.57 21.39-14.07 35.05-10.08 16.21-33.93 52.33-45.69 73.39-3.95 7.07-6 34.66-6.37 88.18-.05 6.81 6.08 17.06 7.73 17.06 10 0 10.47 10.82 1 20.34-4.9 4.89 15.81 168.16 14.94 225.27-.87 57.47-10.12 158.11-16.27 177-2 6.15 19.56 20.69 7.12 35-5.24 6.05-9.53 14.91-9.53 19.7 0 9.73 17.81 28.35 27.12 28.35a11.94 11.94 0 0 1 9.13 5c2 3.2 5.48 12.43-12.51 25.64-10.49 7.7-12.82 25.17-13 39.35-.26 27.86-65.03 1412.16-66.74 1464.71z\"\n        data-name=\"Slughorn\"\n        fill={fill}\n        rotate={`${rotate}`}\n      />\n    </WandSVG>\n  );\n};\n","import React from \"react\";\nimport { Path, WandSVG } from \"./component-styles\";\n\nexport const Snape = ({\n  rotate,\n  fill,\n}: {\n  rotate: number;\n  fill: string;\n}): JSX.Element => {\n  // console.log(\"Snape Component Exists\");\n  return (\n    <WandSVG>\n      <Path\n        d=\"M197.64 2493.41c-10.28-2.79-16.42-7.89-18-14.95-3.79-16.84-5.32-249.11-1.64-249.11 1.82 0 3.39-78.55 3.49-174.57s1.43-212.51 3-258.86 5.93-236 9.82-421.4 7.22-389.17 9.82-452.71c3.48-85.46 8.59-134.93 3.76-136.23-3.86-1-4-8.5-3.34-28.06 1.17-37.66-.79-36.31-5.31-37.36-1.67-.39-3-4.49-3-6.24 0-26.2 1.15-55.91 1.47-85.88.51-47.68 1-110 1-138.47s5.05-312.67 13.4-318.89c3.67-2.74 9.51-18.51 13-35.05s8.76-33.38 11.71-37.42c5.5-7.52 35.84-11.21 45.11-5.48 2.82 1.74 7.86 18.42 11.19 37.06s9.49 37.84 13.68 42.67c6.53 7.54 7.5 24.56 6.76 119-1.5 191.69-9 375.28-10.85 420.85-.25 6.42 1.45 11.37-2.21 11.42-9.57.12-6.7-1.91-6.45 27.11.12 14.64 1.12 37.2-3.46 37.59-13.16 1.14-8.17-18.84-12.14 263.41-1.6 113.91-6.08 240.68-7.44 281.73s-4.56 147.25-7.11 236-5.8 194.92-7.24 236-7 209-12.35 373.24-10.61 301.16-11.68 304.3c-3.54 10.2-18.77 14.7-34.99 10.3z\"\n        data-name=\"Snape\"\n        fill={fill}\n        rotate={`${rotate}`}\n      />\n    </WandSVG>\n  );\n};\n","import React from \"react\";\nimport { Path, WandSVG } from \"./component-styles\";\n\nexport const Voldemort = ({\n  rotate,\n  fill,\n}: {\n  rotate: number;\n  fill: string;\n}): JSX.Element => {\n  // console.log(\"Voldemort Component Exists\");\n  return (\n    <WandSVG>\n      <Path\n        d=\"M181 526.13c-1.41-22.46-2.76-50.83-4.3-69.06-1.45-17-2.19-34.2-6.13-50.79-4.76-20.07-11.54-50-22.47-69.61-10.47-18.82-32.55-36.12-43.09-48.16-6.88-7.87-17.81-13.88-20.1-24.08-3.79-16.86-5.1-59.4-2.63-77.06 1.57-11.14 7.41-23.87 17.48-28.89 11-5.48 35.82-1.07 48.34-3.95 9.74-2.24 20.91-7.51 26.85-13.32 5.54-5.43 3.48-15.86 8.74-21.56 7.43-8.08 23.29-23.71 35.88-26.92s28.17 1.4 39.68 7.67 22.26 24.78 29.34 29.94c3.54 2.59 8.74 1.43 13.11 1 12.24-1.06 44.29-8.53 60.32-7.45 12.79.86 26.41 5.22 35.84 13.9 10.55 9.7 14.34 60.6 7 56.58-7.2-3.93-15.55-8.7-23.6-7-9.91 2-25.95 10-35.84 19.27-12.82 12-31.62 33.28-41.09 53-7.12 14.81-11.2 31.62-13.71 48.51 3.29 9.19 5.8 16.14 7.22 19.68 11.41 28.49-17.22 291.3-16.52 292.43 2 3.29 11.14 81.3 16.17 98.15 7.67 25.73 34 73.31 34 74 0 6.23-18.06 16.3-29.24 16.3-10.16 0-14.15 2.35-14.27 8.43-.08 4.63-4.13 19.93-9 34-1.34 3.88-5.68 196.6-11.16 449.62 0 1.63-2.37 9.9-2.4 11.53-9.65 445.72-20.48 1068.27-26.95 1184.81-.37 6.77-2.73 11.18-5.92 13.84-8 6.63-21.18 2.41-22.17-3.06-4.81-26.77-6.15-784-7.15-1182.16 0-4.38-.69-25.27-.93-29.54-7-124.79-10.9-473-14.19-473-7.33 0-21.58 5.61-31.68 12.47-24.17 16.42-35.71 12.48-20-12.29 26.08-41 34.12-143.72 34.12-146.63.02-4.5 4.63-81.4 10.45-150.6z\"\n        data-name=\"Voldemort\"\n        fill={fill}\n        rotate={`${rotate}`}\n      />\n    </WandSVG>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { ClockLabels, PlacementPoints } from \"./ClockLabels\";\nimport { Location, User } from \"./MainPage\";\nimport { Bellatrix } from \"./wands/components/Bellatrix\";\nimport { DeathEaters } from \"./wands/components/DeathEaters\";\nimport { Dumbeldore } from \"./wands/components/Dumbeldore\";\nimport { Dumbeldore2 } from \"./wands/components/Dumbeldore2\";\nimport { Fleur } from \"./wands/components/Fleur\";\nimport { Ginny } from \"./wands/components/Ginny\";\nimport { Harry } from \"./wands/components/Harry\";\nimport { Hermione } from \"./wands/components/Hermione\";\nimport { Krum } from \"./wands/components/Krum\";\nimport { Longbottom } from \"./wands/components/Longbottom\";\nimport { Luna } from \"./wands/components/Luna\";\nimport { Malfoy } from \"./wands/components/Malfoy\";\nimport { Minerva } from \"./wands/components/Minerva\";\nimport { Narcissa } from \"./wands/components/Narcissa\";\nimport { Ron } from \"./wands/components/Ron\";\nimport { Sirius } from \"./wands/components/Sirius\";\nimport { Slughorn } from \"./wands/components/Slughorn\";\nimport { Snape } from \"./wands/components/Snape\";\nimport { Voldemort } from \"./wands/components/Voldemort\";\nconst randomColor = require(\"randomcolor\");\n\nexport interface ClockProps {\n  locations: Location[];\n  currentLocation: Location;\n  friends: User[];\n  userName: string | null;\n}\n\nconst Clock: React.FC<ClockProps> = (clockProps) => {\n  const { locations, currentLocation, friends, userName } = clockProps;\n  const colorArray: string[] = [];\n  for (let i = 0; i < friends.length; i++){\n    colorArray.push(randomColor())\n  }\n  const userColor = randomColor()\n\n  const friendLocations: Location[] = ((): Location[] => {\n    const locationsArray: Location[] = [];\n    friends.forEach((friend) => {\n      const locationsIncludes = locations.some(location => location.id === friend.currentLocation.id);\n      const locationsArrayIncludes = locationsArray.some(\n        (location) => location.id === friend.currentLocation.id\n      );\n\n      if (!locationsIncludes && !locationsArrayIncludes) {\n        locationsArray.push(friend.currentLocation);\n      }\n    });\n    return locationsArray;\n  })();\n\n  \n  // class Coordinates {\n  //     x: number;\n  //     y: number;\n  //     constructor() {\n  //       this.x = 0;\n  //       this.y = 0;\n  //     }\n  // }\n\n  const getRandomIntInclusive = (min: number, max: number) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive\n  };\n  const placementPoints = new PlacementPoints();\n\n  const radiansBetweenLocations = (2 * Math.PI) / locations.length;\n  \n  const placeArm = (location: string): number => {\n    let degrees: number = 0;\n    for (let i = 0; i < locations.length; i++) {\n      if (location === locations[i].name) {\n        let radian = radiansBetweenLocations * i;\n        degrees = radian * (180 / Math.PI);\n      }\n    }\n\n    return 180 - degrees;\n  };\n\n  const rotateComponent = (rotate: number, fill: string): JSX.Element => {\n    const elements = [\n      <Bellatrix rotate={rotate} fill={fill} />,\n      <Dumbeldore rotate={rotate} fill={fill} />,\n      <DeathEaters rotate={rotate} fill={fill} />,\n      <Dumbeldore2 rotate={rotate} fill={fill} />,\n      <Fleur rotate={rotate} fill={fill} />,\n      <Ginny rotate={rotate} fill={fill} />,\n      <Harry rotate={rotate} fill={fill} />,\n      <Hermione rotate={rotate} fill={fill} />,\n      <Krum rotate={rotate} fill={fill} />,\n      <Longbottom rotate={rotate} fill={fill} />,\n      <Luna rotate={rotate} fill={fill} />,\n      <Malfoy rotate={rotate} fill={fill} />,\n      <Minerva rotate={rotate} fill={fill} />,\n      <Narcissa rotate={rotate} fill={fill} />,\n      <Ron rotate={rotate} fill={fill} />,\n      <Sirius rotate={rotate} fill={fill} />,\n      <Slughorn rotate={rotate} fill={fill} />,\n      <Snape rotate={rotate} fill={fill} />,\n      <Voldemort rotate={rotate} fill={fill} />,\n    ];\n\n    return elements[getRandomIntInclusive(0, elements.length - 1)];\n  };\n\n  // const armLocation: number = placeArm(currentLocation.name);\n\n  // TODO - friend currentLocations are added to\n\n\n\n  const Arm = (): JSX.Element => {\n    const rotate = placeArm(currentLocation.name);\n    return rotateComponent(rotate, userColor);\n  };\n\n  const makeFriendArms = (): JSX.Element[] => {\n    const friendArmElements: JSX.Element[] = [];\n    for (let i = 0; i < friends.length; i++) {\n      const rotate = placeArm(friends[i].currentLocation.name);\n      friendArmElements.push(\n        rotateComponent(rotate, colorArray[i])\n      );\n    }\n    return friendArmElements;\n  };\n\n  const clockLabelProps = {\n    friends,\n    currentLocation,\n    userName,\n    renderLocations: [...locations, ...friendLocations],\n    userColor,\n    colorArray\n  }\n  const clockLabels = ClockLabels(clockLabelProps)\n\n  return (\n    <ClockMainContainer>\n      <SVG viewBox=\"0 0 100 100\">\n        <ClockFace\n          cx={placementPoints.x}\n          cy={placementPoints.y}\n          r={placementPoints.r}\n          fill=\"#B08968\"\n          stroke=\"tan\"\n          strokeWidth=\"2\"\n          />\n        {Arm()}\n        {makeFriendArms()}\n        {clockLabels.friendLabels}\n        {clockLabels.locationLabels}\n        {clockLabels.userLabel}\n      </SVG>\n    </ClockMainContainer>\n  );\n};\n\nconst ClockMainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  text-align: center;\n  position: relative;\n  overflow: visible;\n`;\n\nconst ClockFace = styled.circle``;\n\nconst SVG = styled.svg`\n  height: 90%;\n  height: ${(clockProps) => clockProps.height};\n  width: 100%;\n  /* border: 2px solid red; */\n  border-radius: 50%;\n  overflow: visible;\n  white-space: nowrap;\n  transform: rotate(${(clockProps) => clockProps.rotate}deg);\n`;\n\n// const SVGARM = styled.svg`\n//   position: absolute;\n//   height: 90%;\n//   top: 0;\n//   right: 0;\n//   height: ${(clockProps) => clockProps.height};\n//   width: 100%;\n//   /* border: 2px solid blue; */\n//   transform: rotate(${(clockProps) => clockProps.rotate}deg);\n// `;\n\n// const Image = styled.image`\n//   width:50%;\n//   height: 50%;\n//   transform-origin: center;\n//   transform: rotate(${clockProps => clockProps.rotate}deg);\n// `;\n\n// const Line = styled.line``;\n\n\n\nexport default Clock;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\n\n\ninterface navPanelProps {\n  navigate: React.MouseEventHandler<Element>;\n  setUserName: React.Dispatch<React.SetStateAction<string | null>>;\n  clearUserData: () => void;\n}\n\nconst NavPanel:React.FC<navPanelProps> = (props) => {\n\n  const { navigate, setUserName, clearUserData } = props;\n\n  const handleSignout = (): void => {\n    console.log('this is doing stuff')\n    localStorage.removeItem('token');\n    clearUserData();\n    setUserName(null);\n\n  }\n\n  return (\n    <NavPanelMain>\n      <SignOut onClick={handleSignout}>Sign Out</SignOut>\n        <li id=\"clock\" onClick={navigate}>Clock</li>\n        <li id=\"friends\" onClick={navigate}>Friends</li>\n        <li id=\"locations\" onClick={navigate}>Locations</li>\n        <li id=\"adventures\" onClick={navigate}>Adventures</li>\n    </NavPanelMain>\n  );\n};\n  \n  const NavPanelMain = styled.div`\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n\n    & li {\n      list-style: none;\n      cursor: pointer;\n      font-size: 2.25rem;\n      text-align: center;\n    }\n  `;\n\nconst SignOut = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\nexport default NavPanel;","import React from \"react\";\nimport Autocomplete from \"react-autocomplete\";\nimport { Location } from \"./MainPage\";\n\n\ninterface AutocompleteProps {\n  userLocations: Location[];\n  setNewLocationName: React.Dispatch<React.SetStateAction<string>>;\n  addLocation: (value: string) => Promise<Location | string>;\n  newLocationName: string;\n  updateAllLocations: (location: Location, type: 'add' | 'remove') => void;\n}\n\n// why did I have to type this as an element instead of a react.fc\nexport const AutocompleteInput = (\n  autocompleteProps: AutocompleteProps\n): JSX.Element => {\n  const { userLocations, setNewLocationName, addLocation, newLocationName, updateAllLocations } =\n    autocompleteProps;\n  // console.log(userLocations);\n\n  const handleLocationInput: React.ChangeEventHandler<HTMLInputElement> =\n    async (e: React.ChangeEvent<HTMLInputElement>) => {\n      const locationName: string = (e.target as HTMLInputElement).value;\n      setNewLocationName(locationName);\n    };\n  \n  const inputOnClick = async () => {\n    if (newLocationName !== \"\") {\n      console.log(\"new location Name: \", newLocationName);\n      const res = await addLocation(newLocationName);\n      if (typeof res === 'string') { console.error(res); }\n      else {\n        updateAllLocations(res, 'add');\n        console.log('else')\n      }\n    }\n  }\n  \n  const inputStyle: React.CSSProperties = {\n    border: \"2px solid purple\",\n    backgroundColor: \"transparent\",\n    fontSize: \"inherit\",\n    textAlign: \"center\",\n    fontFamily: \"inherit\",\n    color: \"inherit\",\n  };\n  \n\n  return (\n    <Autocomplete\n      key=\"newLocation\"\n      getItemValue={(item) => item.name}\n      items={userLocations}\n      renderItem={(item, isHighlighted): React.ReactNode => (\n        <div\n          style={{\n            background: isHighlighted ? \"lightgray\" : \"transparent\",\n            border: \"2px solid green\",\n            textAlign: \"center\",\n            fontFamily: \"inherit\",\n          }}\n        >\n          {item.name}\n        </div>\n      )}\n      renderMenu={(items) => {\n        return <div style={{ border: \"2px solid yellow\" }} children={items} />;\n      }}\n      renderInput={(props) => {\n        return (\n          <input\n            style={inputStyle}\n            placeholder=\"Add New Location\"\n            {...props}\n            onClick={inputOnClick}\n            onSubmit={() => {console.log('this is the onSubmit: ', newLocationName)}}\n          />\n        );\n      }}\n      value={newLocationName}\n      onChange={handleLocationInput}\n      onSelect={addLocation}\n      wrapperStyle={{\n        flex: 1,\n        border: \" 2px solid blue\",\n      }}\n    />\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useMutation, gql, useQuery, FetchResult } from \"@apollo/client\";\nimport styled from \"styled-components\";\nimport { Location } from \"./MainPage\";\nimport { AutocompleteInput } from \"./Autocomplete\";\n\ninterface LocationData {\n  allLocations: Location[];\n}\n\ninterface NewLocationData {\n  createLocation: Location;\n}\n\ninterface UpdateUserConstructor {\n  locations?: number[];\n  currentLocation?: number;\n}\n\nclass UpdateUserInput {\n  locations?: number[];\n  currentLocation?: number;\n\n  constructor(updateUserConstructor: UpdateUserConstructor) {\n    if (updateUserConstructor.locations) {\n      this.locations = updateUserConstructor.locations;\n    }\n    if (updateUserConstructor.currentLocation) {\n      this.currentLocation = updateUserConstructor.currentLocation;\n    }\n  }\n}\n\nclass CreateLocationInput {\n  name: string;\n  constructor({ name }: { name: string }) {\n    this.name = name;\n  }\n}\n\n// GQL Queries\n// updateUser mutation to add new location to user.locations or to update user.currentLocations\nconst UPDATE_USER = gql`\n  mutation updateUser($locations: [Int!], $currentLocation: Int) {\n    updateUser(\n      updateUserInput: {\n        locations: $locations\n        currentLocation: $currentLocation\n      }\n    ) {\n      locations {\n        name\n      }\n      currentLocation {\n        name\n      }\n    }\n  }\n`;\n\nconst CREATE_LOCATION = gql`\n  mutation createLocation($createLocationInput: CreateLocationInput!) {\n    createLocation(createLocationInput: $createLocationInput) {\n      id\n      name\n    }\n  }\n`;\n\nconst getLocations = gql`\n  query friendAndPublicLocations {\n    friendAndPublicLocations {\n      id\n      name\n    }\n  }\n`;\n\n// GQL Queries\n\ninterface locationProps {\n  userLocations: Location[];\n  setLocations: React.Dispatch<React.SetStateAction<Location[]>>;\n  currentLocation: Location;\n  setCurrentLocation: React.Dispatch<React.SetStateAction<Location>>;\n}\n\nconst Locations: React.FC<locationProps> = (props) => {\n  const { userLocations, setLocations, currentLocation, setCurrentLocation } =\n    props;\n  const [newLocationName, setNewLocationName] = useState<string>(\"\");\n  const [selectedLocation, setSelectedLocation] = useState<Location | null>();\n  const [currentPopup, setCurrentPopup] = useState(false);\n  const [popup, setPopup] = useState(false);\n  const [updateUser, { error: updateUserError }] = useMutation(UPDATE_USER);\n  const [createLocation] = useMutation(CREATE_LOCATION);\n  const [allLocations, setAllLocations] = useState<Location[]>([]);\n  const { data: locationData } = useQuery<LocationData>(getLocations);\n\n  useEffect(() => {\n    if (locationData) {\n      setAllLocations(locationData.allLocations);\n    }\n  }, [locationData]);\n\n  // TODO - this doesn't need to grab value since I already set selectedLocation\n  const updateCurrentLocation = async (id: number) => {\n    console.log(\"updateCurrentLocation\", id);\n    const updateUserInput = new UpdateUserInput({\n      currentLocation: id,\n    });\n    const res: FetchResult<\n      any,\n      Record<string, any>,\n      Record<string, any>\n    > = await updateUser({\n      variables: updateUserInput,\n    });\n    if (updateUserError) {\n      console.log(\"o snap Error: \", updateUserError);\n    }\n    if (res.data) {\n      console.log(\"res.data\", res.data);\n      const newCurrentLocation = allLocations.filter(\n        (location) => location.id === id\n      )[0];\n      setCurrentLocation(newCurrentLocation);\n      setPopup(false);\n    }\n  };\n  const updateAllLocations = async (\n    location: Location,\n    type: \"add\" | \"remove\"\n  ) => {\n    console.log(\"updateAllLocations\", location, type);\n    let updateUserInput: UpdateUserInput = {};\n    if (type === \"add\") {\n      updateUserInput = new UpdateUserInput({\n        locations: [...userLocations.map((loc) => loc.id), location.id],\n      });\n    }\n    new UpdateUserInput({\n      currentLocation: location.id,\n    });\n    if (type === \"remove\") {\n      updateUserInput = new UpdateUserInput({\n        locations: [\n          ...userLocations\n            .filter((loc) => loc.id !== location.id)\n            .map((location) => location.id),\n        ],\n      });\n\n      console.log('updateUserInput: ', updateUserInput)\n    }\n    const res: FetchResult<\n      any,\n      Record<string, any>,\n      Record<string, any>\n    > = await updateUser({\n      variables: updateUserInput,\n    });\n    if (updateUserError) {\n      console.log(\"o snap Error: \", updateUserError);\n    }\n    if (res.data) {\n      console.log(\"res.data\", res.data);\n      setLocations([...res.data.updateUser.locations]);\n      setPopup(false);\n    }\n  };\n\n  const addLocation = async (value: string): Promise<Location | string> => {\n    // let locationRes: FetchResult<any, Record<string, any>, Record<string, any>>;\n    let createLocationInput: CreateLocationInput;\n    if (newLocationName !== \"\") {\n      createLocationInput = new CreateLocationInput({\n        name: newLocationName,\n      });\n      //\n      return createLocation({\n        variables: { createLocationInput },\n      }).then(\n        (res: FetchResult<any, Record<string, any>, Record<string, any>>) => {\n          console.log(\"lets see if it works: \", res.data);\n          const newLocationData: NewLocationData = res.data;\n          if (newLocationData) {\n            setLocations([...userLocations, newLocationData.createLocation]);\n            setNewLocationName(\"\");\n            return newLocationData.createLocation;\n          } else {\n            return \"Error Creating New Location\";\n          }\n        }\n      );\n    } else {\n      return \"Add Location Name First\";\n    }\n  };\n\n  const handleCurrentLocationUpdate = (\n    e: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    const locationId: number = Number.parseInt(\n      (e.target as HTMLSelectElement).value\n    );\n    updateCurrentLocation(locationId);\n  };\n\n  // How can I combine these two handlers? SHould I do that? Problem is typing - one is Select element and one is Button\n\n  const removeLocation = (e: React.MouseEvent<HTMLButtonElement>) => {\n    if (selectedLocation) {\n      const locationId: number = Number.parseInt(\n        (e.target as HTMLSelectElement).value\n      );\n      console.log(\"locationID: \", locationId);\n      const locationToRemove = userLocations.find(\n        (location) => location.id === locationId\n      );\n      if (locationToRemove) {\n        updateAllLocations(locationToRemove, \"remove\");\n        setLocations(\n          userLocations.filter((location) => location.id !== locationId)\n        );\n        setPopup(false);\n      } else {\n        console.error(\"Trying to remove a location that does not exist\");\n      }\n    } else {\n      console.error(\"No Location Selected\");\n    }\n  };\n\n  const removeCurrentLocation = (e: React.MouseEvent<HTMLSelectElement>) => {\n    const locationId: number = Number.parseInt(\n      (e.target as HTMLSelectElement).value\n    );\n    const locationToRemove = userLocations.find(\n      (location) => location.id === locationId\n    );\n    if (locationToRemove) {\n      updateAllLocations(locationToRemove, \"remove\");\n      setLocations(\n        userLocations.filter((location) => location.id !== locationId)\n      );\n      setPopup(false);\n    } else {\n      console.error(\n        \"Trying to remove a location that does not exist - CURRENT\"\n      );\n    }\n  };\n\n  const chooseNewCurrentLocation = () => {\n    return (\n      <Select onSelect={removeCurrentLocation}>\n        {userLocations\n          .filter((location) => location.id !== currentLocation.id)\n          .map((location) => (\n            <option key={location.id} value={location.id}>\n              {location.name}\n            </option>\n          ))}\n      </Select>\n    );\n  };\n\n  const renderCurrentPopup = (): JSX.Element => {\n    return (\n      <PopupContainer>\n        <PopupText>\n          You are trying to remove the current location. Where are you now?\n        </PopupText>\n        {chooseNewCurrentLocation()}\n      </PopupContainer>\n    );\n  };\n\n  const createPopup = (e: React.MouseEvent<HTMLLIElement, MouseEvent>) => {\n    const locationString: string | null = (\n      e.target as HTMLLIElement\n    ).getAttribute(\"value\");\n    if (locationString) {\n      const locationId = Number.parseInt(locationString);\n      const locationObj = userLocations.find(\n        (location) => location.id === locationId\n      );\n      setSelectedLocation(locationObj);\n      setPopup(true);\n    } else {\n      console.error(\"Could not find Location ID to Add Location\");\n    }\n  };\n\n  const renderPopup = (): JSX.Element => {\n    if (selectedLocation) {\n      return (\n        <PopupContainer>\n          <PopupText>\n            What do you want to do to the location \"{selectedLocation.name}\"\n          </PopupText>\n          <PopupButton\n            onClick={handleCurrentLocationUpdate}\n            value={selectedLocation.id}\n          >\n            Update Current Location\n          </PopupButton>\n          <PopupButton onClick={removeLocation} value={selectedLocation.id}>\n            Remove\n          </PopupButton>\n        </PopupContainer>\n      );\n    } else {\n      throw new Error(\"Could Not Locate Selected Location\");\n    }\n  };\n\n  const LocationItems = (): JSX.Element => {\n    const notCurrent = userLocations.filter(\n      (location) => location.name !== currentLocation.name\n    );\n\n    const createCurrentPopup = (e: any) => {\n      let locationName = e.target.getAttribute(\"value\");\n      const locationObj: Location | undefined = userLocations.find(\n        (location) => location.name === locationName\n      );\n      if (locationObj) {\n        setSelectedLocation(locationObj);\n        setCurrentPopup(true);\n      } else {\n        console.error(\"Cant find Location\");\n      }\n    };\n\n    // Return a list of all locations, currentLocation will always be top because it has a different popup for removing\n    return (\n      <ul>\n        <li\n          key={currentLocation.id}\n          value={currentLocation.id}\n          onClick={createCurrentPopup}\n        >\n          {currentLocation.name}\n        </li>\n        {notCurrent.map((location) => (\n          <li key={location.id} value={location.id} onClick={createPopup}>\n            {location.name}\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  const autocompleteProps = {\n    userLocations,\n    addLocation,\n    setNewLocationName,\n    newLocationName,\n    updateAllLocations,\n  };\n\n  const renderLocationsTool = (): JSX.Element => {\n    if (popup) {\n      return renderPopup();\n    }\n    if (currentPopup) {\n      return <PopupContainer>{renderCurrentPopup()}</PopupContainer>;\n    } else {\n      return (\n        <LocationsList>\n          <AutocompleteInput {...autocompleteProps} />\n          <LocationItems />\n        </LocationsList>\n      );\n    }\n  };\n\n  return (\n    <LocationsMain>\n      <LocationsTitle>Locations</LocationsTitle>\n      {renderLocationsTool()}\n    </LocationsMain>\n  );\n};\n\nconst LocationsMain = styled.div`\n  /* border: 2px solid crimson; */\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\nconst LocationsTitle = styled.h2`\n  border-bottom: 1px solid tan;\n  flex: 1;\n`;\n\nconst LocationsList = styled.div`\n  flex: 9;\n  & :focus {\n    outline: none;\n  }\n\n  & ul {\n    /* border: 2px solid blue; */\n    padding: 0;\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n\n    & li {\n      /* border: 2px solid yellow; */\n      text-align: center;\n      width: 80%;\n      margin: auto;\n      cursor: pointer;\n    }\n  }\n`;\n\n// const Input = styled.input`\n//   border: none;\n//   /* border: 2px solid green; */\n//   background-color: transparent;\n//   font-size: inherit;\n//   text-align: center;\n//   &&::placeholder {\n//     color: #ede0d4;\n//     font-family: \"Luminari\";\n//   }\n// `;\n\nconst PopupContainer = styled.div`\n  flex: 9;\n`;\n\nconst PopupText = styled.div``;\nconst PopupButton = styled.button``;\nconst Select = styled.select``;\n\nexport default Locations;\n\n// if (locationRes.data) {\n//   // createLocation Mutation should return user's locations and update state\n//   // use newLocation to createLocation, grab location.id and add to newLocations array, then update user\n//   console.log(\"this is locationRes.data: \", locationRes.data);\n//   const addLocation : Location = new Location(\n//     locationRes.data.createLocation.id,\n//     locationRes.data.createLocation.name\n//   );\n//   const updatedLocations: Location[] = [...userLocations, addLocation];\n//   const locationIds: number[] = updatedLocations.map(\n//     (location) => location.id\n//   );\n//   const updateUserInput: UpdateUserInput = new UpdateUserInput({\n//     locations: locationIds,\n//   });\n//   const userRes: FetchResult<\n//     any,\n//     Record<string, any>,\n//     Record<string, any>\n//   > = await updateUser({\n//     variables: { updateUserInput },\n//   });\n//   if (userRes.data) {\n//     //TODO - Probably should actually use data from userRes.data\n//     console.log('this is userRes.data: ', userRes.data)\n//     setLocations(updatedLocations);\n//     setNewLocationName(\"\");\n//   } else {\n//     console.error(\"Update User Locations in DB Failed\");\n//   }\n// }\n","import React, { useState, useEffect } from \"react\";\nimport { useQuery, gql, useMutation } from \"@apollo/client\";\nimport styled from \"styled-components\";\nimport { User } from \"./MainPage\";\n\n// TODO - Display pending friends in different color on top\ninterface friendsProps {\n  userName: string | null;\n  friends: User[];\n  pendingFriends: User[];\n  setPendingFriends: React.Dispatch<React.SetStateAction<User[]>>;\n}\n\n// interface AllUsersData {\n//   allUsers: User[];\n// }\n\ninterface NotFriendsData {\n  userNotFriends: User[];\n}\n\nclass CreateFriendRequestInput {\n  recipient: number;\n  constructor(recipient: number) {\n    this.recipient = recipient;\n  }\n}\n\n//GQL QUERY/MUTATION\n// const GET_ALL_USERS = gql`\n//   query AllUsers {\n//     allUsers {\n//       name\n//     }\n//   }\n// `;\n\nconst GET_NOT_FRIENDS = gql`\n  query UserNotFriends {\n    userNotFriends {\n      name\n      id\n    }\n  }\n`;\n\n// const UPDATE_FRIEND_REQUEST = gql`\n//   mutation updateFriendRequest($id:Number!, $status:String!){\n//     updateFriendRequest(id: $id, status: $status ){\n//       id\n//       recipient{name}\n//       status\n//     }\n//   }\n// `;\n\nconst CREATE_FRIEND_REQUEST = gql`\n  mutation createFriendRequest($createFriendRequestInput: CreateFriendRequestInput!) {\n    createFriendRequest(createFriendRequestInput: $createFriendRequestInput) {\n      createdBy {\n        name\n      }\n      recipient {\n        name\n      }\n    }\n  }\n`;\n//GQL QUERY/MUTATION\n\nconst Friends: React.FC<friendsProps> = (props) => {\n  const [newFriend, setNewFriend] = useState<User>();\n  const [oldFriend, setOldFriend] = useState(\"\");\n  const [notFriends, setNotFriends] = useState<User[]>([]);\n  const [popupRemove, setPopupRemove] = useState(false);\n  const [popupAdd, setPopupAdd] = useState(false);\n  const { friends, pendingFriends, setPendingFriends } = props;\n\n  // GQL Query/Mutations\n  // const { loading: usersLoading, data: usersData } = useQuery<AllUsersData>(\n  //   GET_ALL_USERS\n  // );\n  const {\n    loading: notFriendsLoading,\n    data: notFriendsData,\n  } = useQuery<NotFriendsData>(GET_NOT_FRIENDS);\n  console.log(\"Loading NotFriends: \", notFriendsLoading);\n  const [createFriendRequest, { data: createFriendData }] = useMutation(\n    CREATE_FRIEND_REQUEST\n  );\n  // GQL Query/Mutations\n\n  useEffect(() => {\n    if (notFriendsData) {\n      // console.log(\n      //   \"this is usersData in FriendsCompnent UseEffect: \",\n      //   notFriendsData\n      // );\n      setNotFriends(notFriendsData.userNotFriends);\n    }\n  }, [notFriendsData]);\n\n\n  const createAddWarning: React.ReactEventHandler<HTMLSelectElement> = (\n    e: React.MouseEvent<HTMLSelectElement, MouseEvent>\n  ) => {\n    // Grab\n    console.log(\"this is event\", (e.target as HTMLSelectElement).value);\n    for (let i = 0; i < notFriends.length; i++) {\n      if (notFriends[i].id === Number.parseInt((e.target as HTMLSelectElement).value)) {\n        console.log('notFriends[i]: ', notFriends[i])\n        const friendObj: User = notFriends[i];\n        console.log('friendObj in add: ', friendObj)\n        setNewFriend(friendObj);\n        break;\n      }\n    }\n    setPopupAdd(true);\n  };\n\n  const addFriend: React.MouseEventHandler<HTMLButtonElement> = async () => {\n    // Update DB\n    if (newFriend) {\n      const createFriendRequestInput = new CreateFriendRequestInput(\n        newFriend.id\n      );\n\n      console.log(\n        \"this is createFriendRequestInput: \",\n        createFriendRequestInput\n      );\n\n      const res = await createFriendRequest({\n        variables: { createFriendRequestInput: createFriendRequestInput },\n      });\n      if (res) { \n        setPendingFriends([...friends, newFriend]);\n        alert(`Request Sent to ${newFriend.name}`);\n        setPopupAdd(false);\n      } else {console.error('Failed to Add Friend')}\n    } else {\n      console.error(\"No New Friend Found\");\n    }\n  };\n\n  const removeFriend: React.MouseEventHandler<HTMLButtonElement> = async () => {\n    // TODO - remove Friend handle in DB\n    // setFriends(friends.filter((friend: string) => friend !== oldFriend));\n    setPopupRemove(false);\n    console.log(\"Friend Removed\");\n  };\n\n  const createRemoveWarning: React.MouseEventHandler<HTMLLIElement> = (\n    e: React.MouseEvent<HTMLLIElement, MouseEvent>\n  ) => {\n    // console.log((e.target as HTMLLIElement).getAttribute(\"value\"), \"value\");\n    const oldFriendString = (e.target as HTMLLIElement).getAttribute(\"value\");\n    if (typeof oldFriendString === \"string\") {\n      setOldFriend(oldFriendString);\n    } else {\n      console.error(\"Could Not Find Friend Element\");\n    }\n    setPopupRemove(true);\n  };\n\n  const DropDown = (): JSX.Element => {\n    const createOptions = () => {\n      return notFriends.map((friend) => {\n        return (\n          <Option key={friend.name} value={friend.id}>\n            {friend.name}\n          </Option>\n        );\n      });\n    };\n\n    // console.log('these are createOptions', createOptions())\n\n    return (\n      <Select onChange={createAddWarning}>\n        <Option key=\"DefaultOption\">Add New Friend</Option>\n        {createOptions()}\n      </Select>\n    );\n  };\n\n  const PendingFriendsList = (): JSX.Element => {\n    return (\n      <ul>\n        <p>Pending Friends</p>\n        {pendingFriends.map((friend: User) => (\n          <li key={friend.id} value={friend.name} color={\"blue\"}>\n            {friend.name}\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  const FriendsList = (): JSX.Element => {\n    return (\n      <ul>\n        {DropDown()}\n        {friends.map((friend: User) => (\n          <li key={friend.id} value={friend.name} onClick={createRemoveWarning}>\n            {friend.name}\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  const renderFriendsTool = (): JSX.Element => {\n    if (popupRemove) {\n      return (\n        <FriendsContainer>\n        <Popup>\n          <PopupText>Are You Sure You Want to to remove {oldFriend}?</PopupText>\n          <PopupButton onClick={removeFriend}>Remove</PopupButton>\n          <PopupButton onClick={() => setPopupRemove(false)}>\n            Cancel\n          </PopupButton>\n          </Popup>\n        </FriendsContainer>\n      );\n    }\n    if (popupAdd) {\n      return (\n        <FriendsContainer>\n        <Popup>\n          <PopupText>\n            Are You Sure You Want to to add {newFriend?.name} as a friend?\n          </PopupText>\n          <PopupButton onClick={addFriend}>Add</PopupButton>\n          <PopupButton onClick={() => setPopupAdd(false)}>Cancel</PopupButton>\n          </Popup>\n        </FriendsContainer>\n      );\n    } else {\n      return (\n        <FriendsContainer>\n          <PendingFriendsList />  \n          <FriendsList />\n        </FriendsContainer>\n      )\n    }\n  };\n\n  return (\n    <FriendsMain>\n      <FriendsTitle>Friends</FriendsTitle>\n      <FriendsContainer>{renderFriendsTool()}</FriendsContainer>\n    </FriendsMain>\n  );\n};\n\nconst FriendsMain = styled.div`\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  /* border: 2px solid yellow; */\n`;\n\nconst FriendsTitle = styled.h2`\n  flex: 1;\n  /* border: 2px solid purple; */\n  width: 100%;\n  border-bottom: 1px solid tan;\n`;\n\nconst FriendsContainer = styled.div`\n  flex: 9;\n  /* border: 2px solid teal; */\n  width: 100%;\n  & ul {\n    list-style: none;\n    padding: 0;\n\n    & li {\n      cursor: pointer;\n      /* border: 2px solid black; */\n    }\n  }\n`;\n\nconst Select = styled.select`\n  background-color: transparent;\n  border: none;\n  font-family: inherit;\n  font-size: inherit;\n  color: inherit;\n  appearance: none;\n`;\nconst Option = styled.option`\n  background-color: inherit;\n  font-family: inherit;\n`;\n\nconst Popup = styled.div``;\nconst PopupText = styled.div``;\nconst PopupButton = styled.button``;\n\nexport default Friends;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Locations from \"./Locations\";\nimport Friends from \"./Friends\";\nimport { User, Location } from \"./MainPage\";\n\n\ninterface toolBarProps {\n  activeTool: string;\n  setActiveTool: React.Dispatch<React.SetStateAction<string>>;\n  locations: Location[];\n  setLocations: React.Dispatch<React.SetStateAction<Location[]>>;\n  currentLocation: Location;\n  setCurrentLocation: React.Dispatch<React.SetStateAction<Location>>;\n  friends: User[];\n  setFriends: React.Dispatch<React.SetStateAction<User[]>>;\n  pendingFriends: User[];\n  setPendingFriends: React.Dispatch<React.SetStateAction<User[]>>;\n  userName: string | null;\n}\n\nconst ToolPanel: React.FC<toolBarProps> = (props) => {\n  const {\n    activeTool,\n    setActiveTool,\n    locations,\n    setLocations,\n    currentLocation,\n    setCurrentLocation,\n    friends,\n    setFriends,\n    pendingFriends,\n    setPendingFriends,\n    userName,\n  } = props;\n\n\n\n  const locationProps = {\n    userLocations: locations,\n    setLocations,\n    currentLocation,\n    setCurrentLocation,\n  };\n\n  const friendsProps = {\n    userName,\n    friends,\n    setFriends,\n    pendingFriends,\n    setPendingFriends,\n  };\n\n  const closeWindow = () => {\n    setActiveTool(\"none\");\n  };\n\n  const renderTool = () => {\n    switch (activeTool) {\n      case \"locations\":\n        return <Locations {...locationProps} />;\n\n      case \"friends\":\n        return <Friends {...friendsProps} />;\n\n      case \"test\":\n        return <p>I am a coding god</p>;\n    }\n  };\n\n  const exitButton = () => {\n    return <Button onClick={closeWindow}>Back</Button>;\n  };\n\n  return (\n    <ToolPanelMain>\n      {exitButton()}\n      {renderTool()}\n    </ToolPanelMain>\n  );\n};\n\nconst ToolPanelMain = styled.div`\n  height: 100%;\n  position: relative;\n`;\n\nconst Button = styled.button`\n  background-color: transparent;\n  border: 1px solid;\n  box-shadow: 1px 1px 2px 1px;\n  font-family: inherit;\n  font-size: inherit;\n  color: #e6ccb2;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  height: auto;\n  width: auto;\n`;\nexport default ToolPanel;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\n//GraphQL Test\n\nimport { useMutation, gql, QueryLazyOptions, OperationVariables } from \"@apollo/client\";\n// import { UserData } from \"./MainPage\";\n\n\ninterface LoginProps {\n  setUserName: React.Dispatch<React.SetStateAction<string | null>>;\n  getUserData: (options?: QueryLazyOptions<OperationVariables> | undefined) => void\n}\n\nconst LOGIN = gql`\n  mutation login($password: String!, $name: String!) {\n    login(password: $password, name: $name) {\n      token\n    }\n  }\n`;\n\n//GraphQL Test\n\nexport const Login:React.FC<LoginProps> = (props) => {\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [login, { data }] = useMutation(LOGIN);\n  const { setUserName, getUserData } = props\n  if (data) {\n    //add jwt to localStorage\n    localStorage.setItem('token', data.login.token);\n    // console.log(\"this is data in Login\", data.login.token);\n  }\n    // TODO - Login updates state so main page is rendered (possibly conditional render on userName)\n  const loginUser: React.MouseEventHandler<HTMLButtonElement> = async () => {\n    console.log(`Trying to login ${name} with password: ${password}`);\n    const res = await login({ variables: { password, name } });\n    console.log('this should be a jwt: ', res !== undefined)\n    // GraphQL login mutation should return jwt\n    await getUserData();\n    // Test to move setUserNane back to MainPage\n    setUserName(name);\n    // ResetUser + Pass input\n    setName(\"\");\n    setPassword(\"\");\n  };\n  const createNewUser = () => {\n    console.log(`Trying to create ${name} with password: ${password}`);\n    // GraphQL createNewUser mutation returns jwt\n    setName(\"\");\n    setPassword(\"\");\n  };\n\n  const loginButton = () => {\n    return <Button type=\"submit\" onClick={loginUser}>Login</Button>;\n  };\n  const newUserButton = () => {\n    return <Button onClick={createNewUser}>Create New Wizard</Button>;\n  };\n\n  // console.log(name);\n  // console.log(password);\n  \n  const userNameHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value);\n  }\n  \n  const passwordHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setPassword(e.target.value);\n  }\n\n  return (\n    <LoginMain\n      className=\"LoginMain\"\n      onSubmit={(e) => {\n        // TODO - check to see if this onsubmit is actually doing anything or if just changing the button type to submit is enough\n        e.preventDefault();\n        console.log(\"o this submit work too\");\n      }}\n    >\n      <InputContainer>\n        <Input\n          type=\"text\"\n          value={name}\n          onChange={userNameHandler}\n          placeholder=\"UserNamE\"\n        />\n        <Input\n          type=\"password\"\n          value={password}\n          onChange={passwordHandler}\n          placeholder=\"Password\"\n        />\n      </InputContainer>\n      <ToolContainer>\n        {loginButton()}\n        {newUserButton()}\n      </ToolContainer>\n    </LoginMain>\n  );\n};\n\nconst LoginMain = styled.form`\n  background-color: blanchedalmond;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  border-radius: 10rem;\n  width: 50%;\n  height: 50%;\n  position: absolute;\n  top: 25%;\n  right: 25%;\n`;\n\nconst InputContainer = styled.div`\n  /* border: 2px solid aliceblue; */\n  border-radius: inherit;\n  flex: 1;\n  flex-direction: column;\n  display: flex;\n\n  & :focus {\n    outline: none;\n  }\n`;\n\nconst ToolContainer = styled.div`\n  /* border: 2px solid yellow; */\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  border: none;\n  background-color: transparent;\n  border-radius: inherit;\n  font-size: inherit;\n  text-align: center;\n  padding-top: 2rem;\n  padding-bottom: 2rem;\n`;\n\nconst Button = styled.button`\n  /* background-color: #ddb892; */\n  background-color: transparent;\n  border: none;\n  border-radius: 10%;\n  box-shadow: 2px 2px 5px 2px ;\n  top: 0;\n  right: 0;\n  height: auto;\n  width: auto;\n  font-size: 2rem;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { User } from \"./MainPage\";\n\n\n// TODO - Do I need to issue separate requests for pending and accepted so I don't return currentLocation for pending request\n\ninterface ActivityFeedProps {\n  pendingFriends: User[];\n  friends: User[];\n  setFriends: React.Dispatch<React.SetStateAction<User[]>>;\n  setPendingFriends: React.Dispatch<React.SetStateAction<User[]>>;\n}\n\nclass UpdateFriendRequestInput {\n  id: number;\n  status: \"accepted\" | \"rejected\";\n  constructor(id: number, status: \"accepted\" | \"rejected\") {\n    this.id = id;\n    this.status = status;\n  }\n}\n\nconst HANDLE_FRIEND_REQUEST = gql`\n  mutation UpdateFriendRequest($updateFriendRequestInput: UpdateFriendRequestInput!) {\n    updateFriendRequest(updateFriendRequestInput: $updateFriendRequestInput){\n      id\n      recipient{name}\n    }\n  }\n`;\n\nexport const ActivityFeed: React.FC<ActivityFeedProps> = (props) => {\n  const { pendingFriends, friends, setFriends, setPendingFriends } = props;\n  // TODO - should use data from res to update state\n  const [updateFriendRequest, { error: updateFriendRequestError }] = useMutation(HANDLE_FRIEND_REQUEST);\n  //TODO - accept/reject need to grab createdBy to update db\n\n  const acceptFriend: React.MouseEventHandler<HTMLButtonElement> = async (e: React.MouseEvent<HTMLButtonElement>) => {\n    // const updateFriendRequestInput = new UpdateFriendRequestInput()\n    console.log(\"you got a friend in me\", (e.target as HTMLButtonElement).value);\n    const friendId = Number.parseInt((e.target as HTMLButtonElement).value);\n    const updateFriendRequestInput = new UpdateFriendRequestInput(friendId, \"accepted\");\n    const res = await updateFriendRequest({ variables: { updateFriendRequestInput } })\n    let addFriend: User | undefined;\n    let updatedPendingFriends: User[] | undefined;\n    if (updateFriendRequestError) { console.log('Error', updateFriendRequestError)}\n    if (res) {\n      updatedPendingFriends = (pendingFriends.filter(friend => friend.id !== friendId))\n      addFriend = pendingFriends.find((friend) => friend.id === friendId);\n    }\n    if (addFriend && updatedPendingFriends) {\n      setFriends([...friends, addFriend])\n      setPendingFriends(updatedPendingFriends)\n      console.log('this is the new friend', addFriend)\n    } else { console.error('Cant Find Friend To Add')}\n  };\n\n  // TODO - additional popup to confirm rejecting friend since they can't invite again\n  const rejectFriend: React.MouseEventHandler<HTMLButtonElement> = async (e: React.MouseEvent<HTMLButtonElement>) => {\n    // const updateFriendRequestInput = new UpdateFriendRequestInput()\n    console.log(\"no new firends\", (e.target as HTMLButtonElement).value);\n    const friendId: number = Number.parseInt((e.target as HTMLButtonElement).value);\n\n    const updateFriendRequestInput = new UpdateFriendRequestInput(friendId, \"rejected\");\n    const res = await updateFriendRequest({ variables: { updateFriendRequestInput } })\n    let updatedFriends: User[] | undefined;\n    let updatedPendingFriends: User[] | undefined;\n    if (res) {\n      updatedFriends = pendingFriends.filter(\n       (friend) => friend.id === friendId\n     );\n      \n      updatedPendingFriends = pendingFriends.filter(\n       (friend) => friend.id !== friendId\n       );\n      }\n    if (updatedFriends && updatedPendingFriends) {\n      setFriends(updatedFriends);\n      setPendingFriends(updatedPendingFriends);\n    } else {\n      console.error(\"Cant Find Friend To Remove\");\n    }\n  };\n\n  const renderRequests = (): JSX.Element[] => {\n\n    // TODO: TAKE THIS BULLSHIT OUT\n    if (!pendingFriends) {\n      return [<ItemBox>No Pending Requests</ItemBox>]\n    } else {\n\n      const requestList = pendingFriends.map((req) => {\n        return (\n          <ItemBox>\n            <BoxRequestText>\n              {req.name} would like to be your friend\n            </BoxRequestText>\n            <AcceptButton onClick={acceptFriend} value={req.id}>Accept</AcceptButton>\n            <RejectButton onClick={rejectFriend} value={req.id}>Reject</RejectButton>\n          </ItemBox>\n        );\n      });\n      return requestList;\n    }\n  };\n\n  // const renderUpdates = () => {\n\n  \n  //   const updateList = friends.map((friend) => {\n  //     return (\n  //       <ItemBox>\n  //         <BoxUpdateText>\n  //           Your Friend {friend.name} is at {friend.currentLocation.name}\n  //         </BoxUpdateText>\n  //       </ItemBox>\n  //     );\n  //   });\n  //   return updateList;\n  // };\n\n  return (\n    <ActivityMain>\n      <ActivityHeader>Activity Feed</ActivityHeader>\n      <ActivityBody>\n        {renderRequests()}\n        {/* {renderUpdates()} */}\n      </ActivityBody>\n    </ActivityMain>\n  );\n};\n\nconst ActivityMain = styled.div`\n  /* border: 2px dashed black; */\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\nconst ActivityHeader = styled.h2`\n  border-bottom: 2px solid tan;\n  flex: 1;\n`;\nconst ActivityBody = styled.div`\n  /* border: 2px dashed orangered; */\n  flex: 9;\n  overflow: scroll;\n`;\n\nconst ItemBox = styled.div`\n  border: 2px solid tan;\n  border-radius: 10px;\n  box-shadow: 1px 1px 3px 3px tan;\n  display: grid;\n  margin: 5px;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1fr 1fr;\n`;\n\nconst BoxRequestText = styled.div`\n  /* border: 2px dashed orange; */\n  grid-column: 1/-1;\n  grid-row: 1/2;\n`;\n\n// const BoxUpdateText = styled.div`\n//   /* border: 2px dashed red; */\n//   grid-column: 1/-1;\n//   grid-row:1/-1;\n// `;\n\nconst AcceptButton = styled.button`\n  font-family: inherit;\n  font-size: inherit;\n  color: #0e440e;\n  margin: 15px;\n  border: 2px solid tan;\n  box-shadow: 2px 2px 5px 5px tan;\n  background: none;\n  font-size: 2rem;\n  grid-column: 1/1;\n  grid-row: 2/-1;\n`;\nconst RejectButton = styled.button`\n  font-family: inherit;\n  font-size: inherit;\n  color: #ac0000;\n  margin: 15px;\n  border: 2px solid tan;\n  box-shadow: 2px 2px 5px 5px tan;\n  background: none;\n  font-size: 2rem;\n  grid-column: 2/-1;\n  grid-row: 2/-1;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Clock from \"./Clock\";\nimport NavPanel from \"./NavPanel\";\nimport ToolPanel from \"./ToolPanel\";\nimport { Login } from \"./Login\";\nimport { ActivityFeed } from \"./ActivityFeed\";\n\n//GraphQL Test\n\nimport { useLazyQuery, gql } from \"@apollo/client\";\n\nexport interface User {\n  id: number;\n  name: string;\n  currentLocation: Location;\n  locations: Location[];\n  friends: { accepted: User[]; pending: User[] };\n}\n\nexport interface UserData {\n  user: User[]\n}\n\nexport class Location {\n  id: number;\n  name: string;\n  privacy?: 'public'| 'private' | 'friends';\n  constructor(id: number, name: string) {\n    this.id = id;\n    this.name = name;\n  }\n}\n\nconst GET_USER = gql`\n  query oneUser {\n    user {\n      id\n      name\n      locations {\n        id\n        name\n        privacy\n      }\n      currentLocation {\n        id\n        name\n      }\n      friends {\n        accepted{\n          id\n          name\n          currentLocation{\n            id\n            name\n          }\n        }\n        pending{\n          id\n          name\n        }\n        rejected{\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\n//GraphQL Test\n\ninterface MainPageProps {\n  clearStore: () => void;\n}\n\nconst MainPage: React.FC<MainPageProps> = (props) => {\n  //TODO - useState for userName should look for context\n  const [userName , setUserName] = useState<string | null>(null)\n  const [activeTool, setActiveTool] = useState(\"none\");\n  const [locations, setLocations] = useState<Location[]>([]);\n  const [currentLocation, setCurrentLocation] = useState<Location>({\n    id: 0,\n    name: \"none\",\n  });\n  const [friends, setFriends] = useState<User[]>([]);\n  const [pendingFriends, setPendingFriends] = useState<User[]>([]);\n  const { clearStore } = props;\n\n  //Test\n  const clearUserData = (): void => {\n    userData = undefined;\n    clearStore();\n    console.log('userData clearStore', userData, userName)\n  }\n\n  const updateStateVals = (stateUserData: UserData): void => {\nconsole.log(\n  \"this should be user from db also USerNAme onCompleted\",\n  stateUserData.user\n);\nconst user = stateUserData.user[0];\nconst currentLocation = user.currentLocation;\nconst locations = user.locations.map((location) => location);\n//     // const friendsData = user.friends.accepted.map(friend => friend.recipient.name)\n//     // const pendingFriendsData = user.friends.pending.map(friend => friend.recipient.name)\n//     // console.log('locations from user.locations from db: ', locations)\n//     // console.log('friends from user.locations from db: ', friendsData)\n//     // console.log('pending friends from user.locations from db: ', pendingFriendsData)\n//     // console.log('currentLocation from user.locations from db: ', currentLocation)\nsetCurrentLocation(currentLocation);\nsetUserName(user.name);\nsetFriends(user.friends.accepted);\nsetPendingFriends(user.friends.pending);\nsetLocations(locations);\n  }\n  //Test\n  //GrapQl\n  // Need a useQuery that will check for JWT and reset userData if not present\n  let [getUserData, { data: userData }] = useLazyQuery<UserData>(GET_USER, {\n    onCompleted: () => {\n      if (userData) {\n        console.log('its all happening fo realz');\n        updateStateVals(userData)\n      }\n    },\n    onError: (Error) => { console.log('Error: ', Error) },\n    fetchPolicy: 'no-cache',\n    \n  });\n  // console.log(\"Loading Location: \", locationLoading);\n  // console.log(\"if it worked Locations would be here: \", locationData?.allLocations);\n  // console.log(\"Loading User: \", userLoading, \"userName: \", userName, 'userData: ', userData);\n  // console.log(\"if it worked User would be here: \", userData);\n\n  useEffect(() => {\n    // console.log('useEffect userData PAWEES: ', userData, userName)\n    if (localStorage.getItem('token') && !userName) { getUserData(); }\n\n  }, [userData, getUserData, userName]\n  )\n  //GrapQl\n\n\n  // ToDo - add interfacce to all mouseEvents\n  interface ReactMouseEvent extends EventTarget {\n    id: string;\n  }\n\n  interface MouseEvent extends React.MouseEvent<HTMLElement> {\n    target: ReactMouseEvent;\n  }\n\n  const navigate = (e: MouseEvent): void => {\n    e.preventDefault();\n    setActiveTool(e.target.id);\n  };\n\n  const navPanelProps = {\n    navigate,\n    setUserName,\n    clearUserData,\n  };\n\n  const toolBarProps = {\n    activeTool,\n    setActiveTool,\n    locations,\n    setLocations,\n    currentLocation,\n    setCurrentLocation,\n    friends,\n    setFriends,\n    pendingFriends,\n    setPendingFriends,\n    userName,\n  };\n\n  const clockProps = {\n    locations,\n    currentLocation,\n    friends,\n    userName,\n  };\n\n\n  const activityFeedProps = {\n    pendingFriends,\n    setPendingFriends,\n    friends,\n    setFriends,\n  };\n\n  const loginProps = {\n    setUserName,\n    getUserData,\n  }\n\n  //TODO - useQuery for user, if !user Login renders else rest renders\n\n  const renderNavPanelContainer = () => {\n    if (activeTool === \"none\") {\n      return (\n        <NavPanelContainer>\n          {userData && <NavPanel {...navPanelProps} />}\n        </NavPanelContainer>\n      );\n    }\n  };\n\n  const renderToolPanel = () => {\n    switch (activeTool) {\n      case \"none\":\n        break;\n      case \"friends\":\n      case \"locations\":\n      case \"adventures\":\n        return (\n          <ToolPanelContainer>\n            {userData && <ToolPanel {...toolBarProps} />}\n          </ToolPanelContainer>\n        );\n    }\n  };\n  // TODO - Login doesn't render if userLoading is false\n  const renderLogin = () => {\n    return (\n      <LoginContainer>{!userName && <Login {...loginProps} />}</LoginContainer>\n    );\n  };\n\n  const renderClock = () => {\n    // console.log(userData)\n      return (\n      <ClockContainer>\n        {userData && <Clock {...clockProps} />}\n      </ClockContainer>\n      )\n  }\n\n  const renderActivityFeed = () => {\n    return (\n      <RightSideContainer>\n        {userData && <ActivityFeed {...activityFeedProps}/>}\n      </RightSideContainer>\n    )\n  }\n\n  return (\n    <MainContainer>\n      {renderNavPanelContainer()}\n      {renderToolPanel()}\n      {!userData && renderLogin()}\n      {renderClock()}\n      {renderActivityFeed()}\n      <TopBarContainer>You're a Wizard {userName}</TopBarContainer>\n    </MainContainer>\n  );\n};\n\n\n// TODO- Change grid locations to names instead of numbers\nconst MainContainer = styled.div`\n  font-family: \"Luminari\";\n  color: #ede0d4;\n  background-color: #9c6644;\n  height: 100vh;\n  width: 100vw;\n  display: grid;\n  grid-template-columns: [grid-start] 1fr [left-sidebar-closed] 1fr [left-sidebar-open] 1fr 1fr 1fr 1fr [right-sidebar-open] 1fr [right-sidebar-closed] 1fr [grid-end];\n  grid-template-rows: [grid-top] 1fr [top-bar-bottom ] 1fr [clock-top] 80%;\n`;\n\nconst NavPanelContainer = styled.div`\n  /* border: 2px dashed black; */\n  grid-column: 1 / 2;\n  grid-row: 1 / -1;\n  z-index: 1;\n\n  &:hover {\n    /* border: 2px dashed black; */\n    grid-column: 1 / 3;\n    z-index: 2;\n  }\n`;\n\nconst ToolPanelContainer = styled.div`\n  /* border: 2px solid lawngreen; */\n  grid-row: grid-top / -1;\n  grid-column: 1 / 3;\n`;\nconst RightSideContainer = styled.div`\n  /* border: 2px solid orange; */\n  grid-row: 1 / -1;\n  grid-column: right-sidebar-closed / 9;\n  z-index: 1;\n`;\nconst TopBarContainer = styled.div`\n  /* border: 2px solid purple; */\n  grid-row: 1 / 2;\n  grid-column: 1 / 9;\n  z-index: 0;\n  font-size: 4rem;\n`;\nconst ClockContainer = styled.div`\n  /* border: 2px solid pink; */\n  grid-column: 3 / 7;\n  grid-row: clock-top / -1;\n`;\n\nconst LoginContainer = styled.div`\n  /* border: 2px solid red; */\n  grid-column: 2 / 8;\n  grid-row: 2 / -1;\n  z-index: 1;\n  position: relative;\n`;\n\nexport default MainPage;\n","import \"./App.css\";\nimport MainPage from \"./MainPage\"\nimport { ApolloProvider } from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\n// Attempt to create GraphQl client\nimport { ApolloClient, InMemoryCache, createHttpLink } from \"@apollo/client\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"token\");\n  // console.log('this is token in App.tsx authLink: ', token);\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      Authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:3000/graphql\",\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n// Attempt to create GraphQl client\n\nconst clearStore = async (): Promise<void> => {\n  await client.clearStore();\n  console.log(client.cache)\n}\n\nconst mainPageProps = {\n  clearStore\n}\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <MainPage {...mainPageProps} />\n        </header>\n      </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}